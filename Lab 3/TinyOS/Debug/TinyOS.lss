
TinyOS.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000004ee  00800100  00000c58  00000cec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c58  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001a  008005ee  008005ee  000011da  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000011da  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000120c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000b8  00000000  00000000  00001250  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001280  00000000  00000000  00001308  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000813  00000000  00000000  00002588  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a98  00000000  00000000  00002d9b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000154  00000000  00000000  00003834  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00004764  00000000  00000000  00003988  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000217  00000000  00000000  000080ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000088  00000000  00000000  00008303  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  000013f6  00000000  00000000  0000838b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	95 c0       	rjmp	.+298    	; 0x12c <__ctors_end>
   2:	00 00       	nop
   4:	ae c0       	rjmp	.+348    	; 0x162 <__bad_interrupt>
   6:	00 00       	nop
   8:	ac c0       	rjmp	.+344    	; 0x162 <__bad_interrupt>
   a:	00 00       	nop
   c:	aa c0       	rjmp	.+340    	; 0x162 <__bad_interrupt>
   e:	00 00       	nop
  10:	a8 c0       	rjmp	.+336    	; 0x162 <__bad_interrupt>
  12:	00 00       	nop
  14:	a6 c0       	rjmp	.+332    	; 0x162 <__bad_interrupt>
  16:	00 00       	nop
  18:	a4 c0       	rjmp	.+328    	; 0x162 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	a2 c0       	rjmp	.+324    	; 0x162 <__bad_interrupt>
  1e:	00 00       	nop
  20:	a0 c0       	rjmp	.+320    	; 0x162 <__bad_interrupt>
  22:	00 00       	nop
  24:	9e c0       	rjmp	.+316    	; 0x162 <__bad_interrupt>
  26:	00 00       	nop
  28:	9c c0       	rjmp	.+312    	; 0x162 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	9a c0       	rjmp	.+308    	; 0x162 <__bad_interrupt>
  2e:	00 00       	nop
  30:	98 c0       	rjmp	.+304    	; 0x162 <__bad_interrupt>
  32:	00 00       	nop
  34:	96 c0       	rjmp	.+300    	; 0x162 <__bad_interrupt>
  36:	00 00       	nop
  38:	94 c0       	rjmp	.+296    	; 0x162 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	92 c0       	rjmp	.+292    	; 0x162 <__bad_interrupt>
  3e:	00 00       	nop
  40:	90 c0       	rjmp	.+288    	; 0x162 <__bad_interrupt>
  42:	00 00       	nop
  44:	8e c0       	rjmp	.+284    	; 0x162 <__bad_interrupt>
  46:	00 00       	nop
  48:	8c c0       	rjmp	.+280    	; 0x162 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	8a c0       	rjmp	.+276    	; 0x162 <__bad_interrupt>
  4e:	00 00       	nop
  50:	88 c0       	rjmp	.+272    	; 0x162 <__bad_interrupt>
  52:	00 00       	nop
  54:	86 c0       	rjmp	.+268    	; 0x162 <__bad_interrupt>
  56:	00 00       	nop
  58:	84 c0       	rjmp	.+264    	; 0x162 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	82 c0       	rjmp	.+260    	; 0x162 <__bad_interrupt>
  5e:	00 00       	nop
  60:	80 c0       	rjmp	.+256    	; 0x162 <__bad_interrupt>
  62:	00 00       	nop
  64:	7e c0       	rjmp	.+252    	; 0x162 <__bad_interrupt>
  66:	00 00       	nop
  68:	7b 03       	fmul	r23, r19
  6a:	81 03       	fmuls	r16, r17
  6c:	81 03       	fmuls	r16, r17
  6e:	81 03       	fmuls	r16, r17
  70:	7d 03       	fmul	r23, r21
  72:	81 03       	fmuls	r16, r17
  74:	81 03       	fmuls	r16, r17
  76:	81 03       	fmuls	r16, r17
  78:	81 03       	fmuls	r16, r17
  7a:	81 03       	fmuls	r16, r17
  7c:	81 03       	fmuls	r16, r17
  7e:	79 03       	fmul	r23, r17
  80:	81 03       	fmuls	r16, r17
  82:	81 03       	fmuls	r16, r17
  84:	81 03       	fmuls	r16, r17
  86:	81 03       	fmuls	r16, r17
  88:	81 03       	fmuls	r16, r17
  8a:	81 03       	fmuls	r16, r17
  8c:	81 03       	fmuls	r16, r17
  8e:	81 03       	fmuls	r16, r17
  90:	7f 03       	fmul	r23, r23
  92:	81 03       	fmuls	r16, r17
  94:	81 03       	fmuls	r16, r17
  96:	81 03       	fmuls	r16, r17
  98:	81 03       	fmuls	r16, r17
  9a:	81 03       	fmuls	r16, r17
  9c:	81 03       	fmuls	r16, r17
  9e:	81 03       	fmuls	r16, r17
  a0:	81 03       	fmuls	r16, r17
  a2:	81 03       	fmuls	r16, r17
  a4:	81 03       	fmuls	r16, r17
  a6:	81 03       	fmuls	r16, r17
  a8:	7b 03       	fmul	r23, r19
  aa:	81 03       	fmuls	r16, r17
  ac:	81 03       	fmuls	r16, r17
  ae:	81 03       	fmuls	r16, r17
  b0:	7d 03       	fmul	r23, r21
  b2:	81 03       	fmuls	r16, r17
  b4:	81 03       	fmuls	r16, r17
  b6:	81 03       	fmuls	r16, r17
  b8:	81 03       	fmuls	r16, r17
  ba:	81 03       	fmuls	r16, r17
  bc:	81 03       	fmuls	r16, r17
  be:	79 03       	fmul	r23, r17
  c0:	81 03       	fmuls	r16, r17
  c2:	81 03       	fmuls	r16, r17
  c4:	81 03       	fmuls	r16, r17
  c6:	81 03       	fmuls	r16, r17
  c8:	81 03       	fmuls	r16, r17
  ca:	81 03       	fmuls	r16, r17
  cc:	81 03       	fmuls	r16, r17
  ce:	81 03       	fmuls	r16, r17
  d0:	7f 03       	fmul	r23, r23
  d2:	08 00       	.word	0x0008	; ????
  d4:	00 00       	nop
  d6:	be 92       	st	-X, r11
  d8:	24 49       	sbci	r18, 0x94	; 148
  da:	12 3e       	cpi	r17, 0xE2	; 226
  dc:	ab aa       	std	Y+51, r10	; 0x33
  de:	aa 2a       	or	r10, r26
  e0:	be cd       	rjmp	.-1156   	; 0xfffffc5e <__eeprom_end+0xff7efc5e>
  e2:	cc cc       	rjmp	.-1640   	; 0xfffffa7c <__eeprom_end+0xff7efa7c>
  e4:	4c 3e       	cpi	r20, 0xEC	; 236
  e6:	00 00       	nop
  e8:	00 80       	ld	r0, Z
  ea:	be ab       	std	Y+54, r27	; 0x36
  ec:	aa aa       	std	Y+50, r10	; 0x32
  ee:	aa 3e       	cpi	r26, 0xEA	; 234
  f0:	00 00       	nop
  f2:	00 00       	nop
  f4:	bf 00       	.word	0x00bf	; ????
  f6:	00 00       	nop
  f8:	80 3f       	cpi	r24, 0xF0	; 240
  fa:	00 00       	nop
  fc:	00 00       	nop
  fe:	00 08       	sbc	r0, r0
 100:	41 78       	andi	r20, 0x81	; 129
 102:	d3 bb       	out	0x13, r29	; 19
 104:	43 87       	std	Z+11, r20	; 0x0b
 106:	d1 13       	cpse	r29, r17
 108:	3d 19       	sub	r19, r13
 10a:	0e 3c       	cpi	r16, 0xCE	; 206
 10c:	c3 bd       	out	0x23, r28	; 35
 10e:	42 82       	std	Z+2, r4	; 0x02
 110:	ad 2b       	or	r26, r29
 112:	3e 68       	ori	r19, 0x8E	; 142
 114:	ec 82       	std	Y+4, r14	; 0x04
 116:	76 be       	out	0x36, r7	; 54
 118:	d9 8f       	std	Y+25, r29	; 0x19
 11a:	e1 a9       	ldd	r30, Z+49	; 0x31
 11c:	3e 4c       	sbci	r19, 0xCE	; 206
 11e:	80 ef       	ldi	r24, 0xF0	; 240
 120:	ff be       	out	0x3f, r15	; 63
 122:	01 c4       	rjmp	.+2050   	; 0x926 <__floatsisf+0x12>
 124:	ff 7f       	andi	r31, 0xFF	; 255
 126:	3f 00       	.word	0x003f	; ????
 128:	00 00       	nop
	...

0000012c <__ctors_end>:
 12c:	11 24       	eor	r1, r1
 12e:	1f be       	out	0x3f, r1	; 63
 130:	cf ef       	ldi	r28, 0xFF	; 255
 132:	d8 e0       	ldi	r29, 0x08	; 8
 134:	de bf       	out	0x3e, r29	; 62
 136:	cd bf       	out	0x3d, r28	; 61

00000138 <__do_copy_data>:
 138:	15 e0       	ldi	r17, 0x05	; 5
 13a:	a0 e0       	ldi	r26, 0x00	; 0
 13c:	b1 e0       	ldi	r27, 0x01	; 1
 13e:	e8 e5       	ldi	r30, 0x58	; 88
 140:	fc e0       	ldi	r31, 0x0C	; 12
 142:	02 c0       	rjmp	.+4      	; 0x148 <__do_copy_data+0x10>
 144:	05 90       	lpm	r0, Z+
 146:	0d 92       	st	X+, r0
 148:	ae 3e       	cpi	r26, 0xEE	; 238
 14a:	b1 07       	cpc	r27, r17
 14c:	d9 f7       	brne	.-10     	; 0x144 <__do_copy_data+0xc>

0000014e <__do_clear_bss>:
 14e:	26 e0       	ldi	r18, 0x06	; 6
 150:	ae ee       	ldi	r26, 0xEE	; 238
 152:	b5 e0       	ldi	r27, 0x05	; 5
 154:	01 c0       	rjmp	.+2      	; 0x158 <.do_clear_bss_start>

00000156 <.do_clear_bss_loop>:
 156:	1d 92       	st	X+, r1

00000158 <.do_clear_bss_start>:
 158:	a8 30       	cpi	r26, 0x08	; 8
 15a:	b2 07       	cpc	r27, r18
 15c:	e1 f7       	brne	.-8      	; 0x156 <.do_clear_bss_loop>
 15e:	d6 d2       	rcall	.+1452   	; 0x70c <main>
 160:	79 c5       	rjmp	.+2802   	; 0xc54 <_exit>

00000162 <__bad_interrupt>:
 162:	4e cf       	rjmp	.-356    	; 0x0 <__vectors>

00000164 <Mega328P_Init>:
.set	temp,0				//student comment here

.section ".text"			//student comment here
.global Mega328P_Init
Mega328P_Init:
		ldi	r16,0x07		;PB0(R*W),PB1(RS),PB2(E) as fixed outputs
 164:	07 e0       	ldi	r16, 0x07	; 7
		out	DDRB,r16		//student comment here
 166:	04 b9       	out	0x04, r16	; 4
		ldi	r16,0			//student comment here
 168:	00 e0       	ldi	r16, 0x00	; 0
		out	PORTB,r16		//student comment here
 16a:	05 b9       	out	0x05, r16	; 5
		out	U2X0,r16		;initialize UART, 8bits, no parity, 1 stop, 9600
 16c:	01 b9       	out	0x01, r16	; 1
		ldi	r17,0x0			//storing the value of the high byte for 9600 Baud rate
 16e:	10 e0       	ldi	r17, 0x00	; 0
		ldi	r16,0x67		//storing the value of the low byte for 9600 Baud rate
 170:	07 e6       	ldi	r16, 0x67	; 103
		sts	UBRR0H,r17		//setting the high byte for Baud rate
 172:	10 93 c5 00 	sts	0x00C5, r17	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
		sts	UBRR0L,r16		//setting the low byte for Baud rate
 176:	00 93 c4 00 	sts	0x00C4, r16	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
		ldi	r16,24			//value to enable the receiver and transmitter
 17a:	08 e1       	ldi	r16, 0x18	; 24
		sts	UCSR0B,r16		//enabling the receiver and transmitter
 17c:	00 93 c1 00 	sts	0x00C1, r16	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
		ldi	r16,6			//student comment here
 180:	06 e0       	ldi	r16, 0x06	; 6
		sts	UCSR0C,r16		//student comment here
 182:	00 93 c2 00 	sts	0x00C2, r16	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
		ldi r16,0x87		//initialize ADC
 186:	07 e8       	ldi	r16, 0x87	; 135
		sts	ADCSRA,r16		//student comment here
 188:	00 93 7a 00 	sts	0x007A, r16	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
		ldi r16,0x40		//student comment here
 18c:	00 e4       	ldi	r16, 0x40	; 64
		sts ADMUX,r16		//student comment here
 18e:	00 93 7c 00 	sts	0x007C, r16	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
		ldi r16,0			//student comment here
 192:	00 e0       	ldi	r16, 0x00	; 0
		sts ADCSRB,r16		//student comment here
 194:	00 93 7b 00 	sts	0x007B, r16	; 0x80007b <__TEXT_REGION_LENGTH__+0x7e007b>
		ldi r16,0xFE		//student comment here
 198:	0e ef       	ldi	r16, 0xFE	; 254
		sts DIDR0,r16		//student comment here
 19a:	00 93 7e 00 	sts	0x007E, r16	; 0x80007e <__TEXT_REGION_LENGTH__+0x7e007e>
		ldi r16,0xFF		//student comment here
 19e:	0f ef       	ldi	r16, 0xFF	; 255
		sts DIDR1,r16		//student comment here
 1a0:	00 93 7f 00 	sts	0x007F, r16	; 0x80007f <__TEXT_REGION_LENGTH__+0x7e007f>
		ret					//student comment here
 1a4:	08 95       	ret

000001a6 <BAUD_Byte_Set>:
BAUD_Byte_Set:
	

.global LCD_Write_Command
LCD_Write_Command:
	call	UART_Off		//student comment here
 1a6:	31 d0       	rcall	.+98     	; 0x20a <UART_Off>
	ldi		r16,0xFF		;PD0 - PD7 as outputs
 1a8:	0f ef       	ldi	r16, 0xFF	; 255
	out		DDRD,r16		//student comment here
 1aa:	0a b9       	out	0x0a, r16	; 10
	lds		r16,DATA		//student comment here
 1ac:	00 91 f3 05 	lds	r16, 0x05F3	; 0x8005f3 <DATA>
	out		PORTD,r16		//student comment here
 1b0:	0b b9       	out	0x0b, r16	; 11
	ldi		r16,4			//student comment here
 1b2:	04 e0       	ldi	r16, 0x04	; 4
	out		PORTB,r16		//student comment here
	call	LCD_Delay		//student comment here
 1b4:	05 b9       	out	0x05, r16	; 5
 1b6:	04 d0       	rcall	.+8      	; 0x1c0 <LCD_Delay>
	ldi		r16,0			//student comment here
	out		PORTB,r16		//student comment here
	call	LCD_Delay		//student comment here
 1b8:	00 e0       	ldi	r16, 0x00	; 0
 1ba:	05 b9       	out	0x05, r16	; 5
	call	UART_On			//student comment here
 1bc:	01 d0       	rcall	.+2      	; 0x1c0 <LCD_Delay>
 1be:	1f c0       	rjmp	.+62     	; 0x1fe <UART_On>

000001c0 <LCD_Delay>:
	ret						//student comment here
 1c0:	0a ef       	ldi	r16, 0xFA	; 250

000001c2 <D0>:

LCD_Delay:
	ldi		r16,0xFA		//student comment here
 1c2:	1f ef       	ldi	r17, 0xFF	; 255

000001c4 <D1>:
D0:	ldi		r17,0xFF		//student comment here
 1c4:	1a 95       	dec	r17
D1:	dec		r17				//student comment here
 1c6:	f1 f7       	brne	.-4      	; 0x1c4 <D1>
	brne	D1				//student comment here
	dec		r16				//student comment here
 1c8:	0a 95       	dec	r16
	brne	D0				//student comment here
 1ca:	d9 f7       	brne	.-10     	; 0x1c2 <D0>
	ret						//student comment here
 1cc:	08 95       	ret

000001ce <LCD_Write_Data>:

.global LCD_Write_Data
LCD_Write_Data:
	call	UART_Off		//student comment here
 1ce:	1d d0       	rcall	.+58     	; 0x20a <UART_Off>
 1d0:	0f ef       	ldi	r16, 0xFF	; 255
	ldi		r16,0xFF		//student comment here
 1d2:	0a b9       	out	0x0a, r16	; 10
	out		DDRD,r16		//student comment here
 1d4:	00 91 f3 05 	lds	r16, 0x05F3	; 0x8005f3 <DATA>
	lds		r16,DATA		//student comment here
	out		PORTD,r16		//student comment here
 1d8:	0b b9       	out	0x0b, r16	; 11
	ldi		r16,6			//student comment here
	out		PORTB,r16		//student comment here
	call	LCD_Delay		//student comment here
 1da:	06 e0       	ldi	r16, 0x06	; 6
	ldi		r16,0			//student comment here
 1dc:	05 b9       	out	0x05, r16	; 5
	out		PORTB,r16		//student comment here
 1de:	f0 df       	rcall	.-32     	; 0x1c0 <LCD_Delay>
	call	LCD_Delay		//student comment here
 1e0:	00 e0       	ldi	r16, 0x00	; 0
 1e2:	05 b9       	out	0x05, r16	; 5
	call	UART_On			//student comment here
 1e4:	ed df       	rcall	.-38     	; 0x1c0 <LCD_Delay>
 1e6:	0b c0       	rjmp	.+22     	; 0x1fe <UART_On>
	ret						//student comment here
 1e8:	08 95       	ret

000001ea <LCD_Read_Data>:

.global LCD_Read_Data
LCD_Read_Data:
	call	UART_Off		//student comment here
 1ea:	0f d0       	rcall	.+30     	; 0x20a <UART_Off>
	ldi		r16,0x00		//student comment here
 1ec:	00 e0       	ldi	r16, 0x00	; 0
	out		DDRD,r16		//student comment here
 1ee:	0a b9       	out	0x0a, r16	; 10
	out		PORTB,4			//student comment here
 1f0:	45 b8       	out	0x05, r4	; 5
	in		r16,PORTD		//student comment here
 1f2:	0b b1       	in	r16, 0x0b	; 11
	sts		DATA,r16		//student comment here
 1f4:	00 93 f3 05 	sts	0x05F3, r16	; 0x8005f3 <DATA>
	out		PORTB,0			//student comment here
 1f8:	05 b8       	out	0x05, r0	; 5
	call	UART_On			//student comment here
 1fa:	01 c0       	rjmp	.+2      	; 0x1fe <UART_On>
 1fc:	08 95       	ret

000001fe <UART_On>:
	ret						//student comment here
 1fe:	02 e0       	ldi	r16, 0x02	; 2

.global UART_On
UART_On:
	ldi		r16,2				//student comment here
 200:	0a b9       	out	0x0a, r16	; 10
	out		DDRD,r16			//student comment here
 202:	08 e1       	ldi	r16, 0x18	; 24
	ldi		r16,24				//student comment here
 204:	00 93 c1 00 	sts	0x00C1, r16	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	sts		UCSR0B,r16			//student comment here
 208:	08 95       	ret

0000020a <UART_Off>:
	ret							//student comment here
 20a:	00 e0       	ldi	r16, 0x00	; 0

.global UART_Off
UART_Off:
	ldi	r16,0					//student comment here
 20c:	00 93 c1 00 	sts	0x00C1, r16	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	sts UCSR0B,r16				//student comment here
 210:	08 95       	ret

00000212 <UART_Clear>:
	ret							//student comment here
 212:	00 91 c0 00 	lds	r16, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>

.global UART_Clear
UART_Clear:
	lds		r16,UCSR0A			//student comment here
 216:	07 ff       	sbrs	r16, 7
	sbrs	r16,RXC0			//student comment here
 218:	08 95       	ret
	ret							//student comment here
 21a:	00 91 c6 00 	lds	r16, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	lds		r16,UDR0			//student comment here
 21e:	f9 cf       	rjmp	.-14     	; 0x212 <UART_Clear>

00000220 <UART_Get>:
	rjmp	UART_Clear			//student comment here
 220:	00 91 c0 00 	lds	r16, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>

.global UART_Get
UART_Get:
	lds		r16,UCSR0A			//retrieves the status register that checks if there is data in the buffer
 224:	07 ff       	sbrs	r16, 7
	sbrs	r16,RXC0			//skips the next instruction if there is data in the buffer
 226:	fc cf       	rjmp	.-8      	; 0x220 <UART_Get>
	rjmp	UART_Get			//loops the data retrieval function until there is data in the buffer
 228:	00 91 c6 00 	lds	r16, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	lds		r16,UDR0			//stores the data in the buffer in r16
 22c:	00 93 f7 05 	sts	0x05F7, r16	; 0x8005f7 <ASCII>
	sts		ASCII,r16			//stores the register data into the address pointed to by ASCII
 230:	08 95       	ret

00000232 <UART_Put>:
	ret							//end and return from this function
 232:	10 91 c0 00 	lds	r17, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>

.global UART_Put
UART_Put:
	lds		r17,UCSR0A			//student comment here
 236:	15 ff       	sbrs	r17, 5
	sbrs	r17,UDRE0			//student comment here
 238:	fc cf       	rjmp	.-8      	; 0x232 <UART_Put>
	rjmp	UART_Put			//student comment here
 23a:	00 91 f7 05 	lds	r16, 0x05F7	; 0x8005f7 <ASCII>
	lds		r16,ASCII			//student comment here
 23e:	00 93 c6 00 	sts	0x00C6, r16	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	sts		UDR0,r16			//student comment here
 242:	08 95       	ret

00000244 <ADC_Get>:
	ret							//student comment here
 244:	07 ec       	ldi	r16, 0xC7	; 199

.global ADC_Get
ADC_Get:
		ldi		r16,0xC7			//student comment here
 246:	00 93 7a 00 	sts	0x007A, r16	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>

0000024a <A2V1>:
		sts		ADCSRA,r16			//student comment here
 24a:	00 91 7a 00 	lds	r16, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
A2V1:	lds		r16,ADCSRA			//student comment here
 24e:	06 fd       	sbrc	r16, 6
		sbrc	r16,ADSC			//student comment here
 250:	fc cf       	rjmp	.-8      	; 0x24a <A2V1>
		rjmp 	A2V1				//student comment here
 252:	00 91 78 00 	lds	r16, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
		lds		r16,ADCL			//student comment here
 256:	00 93 05 06 	sts	0x0605, r16	; 0x800605 <LADC>
		sts		LADC,r16			//student comment here
 25a:	00 91 79 00 	lds	r16, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
		lds		r16,ADCH			//student comment here
 25e:	00 93 f4 05 	sts	0x05F4, r16	; 0x8005f4 <HADC>
		sts		HADC,r16			//student comment here
 262:	08 95       	ret

00000264 <EEPROM_Write>:
		ret							//student comment here
 264:	f9 99       	sbic	0x1f, 1	; 31

.global EEPROM_Write
EEPROM_Write:      
		sbic    EECR,EEPE
 266:	fe cf       	rjmp	.-4      	; 0x264 <EEPROM_Write>
		rjmp    EEPROM_Write		; Wait for completion of previous write
 268:	20 e0       	ldi	r18, 0x00	; 0
		ldi		r18,0x00			; Set up address (r18:r17) in address register
 26a:	15 e0       	ldi	r17, 0x05	; 5
		ldi		r17,0x05 
 26c:	06 e4       	ldi	r16, 0x46	; 70
		ldi		r16,'F'				; Set up data in r16    
 26e:	22 bd       	out	0x22, r18	; 34
		out     EEARH, r18      
 270:	11 bd       	out	0x21, r17	; 33
		out     EEARL, r17			      
 272:	00 bd       	out	0x20, r16	; 32
		out     EEDR,r16			; Write data (r16) to Data Register  
 274:	fa 9a       	sbi	0x1f, 2	; 31
		sbi     EECR,EEMPE			; Write logical one to EEMPE
 276:	f9 9a       	sbi	0x1f, 1	; 31
		sbi     EECR,EEPE			; Start eeprom write by setting EEPE
 278:	08 95       	ret

0000027a <EEPROM_Read>:
		ret 
 27a:	f9 99       	sbic	0x1f, 1	; 31

.global EEPROM_Read
EEPROM_Read:					    
		sbic    EECR,EEPE    
 27c:	fe cf       	rjmp	.-4      	; 0x27a <EEPROM_Read>
		rjmp    EEPROM_Read		; Wait for completion of previous write
 27e:	20 e0       	ldi	r18, 0x00	; 0
		ldi		r18,0x00		; Set up address (r18:r17) in EEPROM address register
 280:	15 e0       	ldi	r17, 0x05	; 5
		ldi		r17,0x05
 282:	00 e0       	ldi	r16, 0x00	; 0
		ldi		r16,0x00   
 284:	22 bd       	out	0x22, r18	; 34
		out     EEARH, r18   
 286:	11 bd       	out	0x21, r17	; 33
		out     EEARL, r17		   
 288:	f8 9a       	sbi	0x1f, 0	; 31
		sbi     EECR,EERE		; Start eeprom read by writing EERE
 28a:	00 b5       	in	r16, 0x20	; 32
		in      r16,EEDR		; Read data from Data Register
 28c:	00 93 f7 05 	sts	0x05F7, r16	; 0x8005f7 <ASCII>
		sts		ASCII,r16  
 290:	08 95       	ret

00000292 <UART_Puts>:
		ret
 292:	cf 93       	push	r28
				return;
			default:
				UART_Puts("\r\nInvalid option\r\n");
				break;
		}
	}
 294:	df 93       	push	r29
 296:	ec 01       	movw	r28, r24
 298:	98 81       	ld	r25, Y
 29a:	99 23       	and	r25, r25
 29c:	39 f0       	breq	.+14     	; 0x2ac <UART_Puts+0x1a>
 29e:	21 96       	adiw	r28, 0x01	; 1
 2a0:	90 93 f7 05 	sts	0x05F7, r25	; 0x8005f7 <ASCII>
 2a4:	c6 df       	rcall	.-116    	; 0x232 <UART_Put>
 2a6:	99 91       	ld	r25, Y+
 2a8:	91 11       	cpse	r25, r1
 2aa:	fa cf       	rjmp	.-12     	; 0x2a0 <UART_Puts+0xe>
 2ac:	df 91       	pop	r29
 2ae:	cf 91       	pop	r28
 2b0:	08 95       	ret

000002b2 <LCD_Puts>:
 2b2:	cf 93       	push	r28
 2b4:	df 93       	push	r29
 2b6:	ec 01       	movw	r28, r24
 2b8:	98 81       	ld	r25, Y
 2ba:	99 23       	and	r25, r25
 2bc:	39 f0       	breq	.+14     	; 0x2cc <LCD_Puts+0x1a>
 2be:	21 96       	adiw	r28, 0x01	; 1
 2c0:	90 93 f3 05 	sts	0x05F3, r25	; 0x8005f3 <DATA>
 2c4:	84 df       	rcall	.-248    	; 0x1ce <LCD_Write_Data>
 2c6:	99 91       	ld	r25, Y+
 2c8:	91 11       	cpse	r25, r1
 2ca:	fa cf       	rjmp	.-12     	; 0x2c0 <LCD_Puts+0xe>
 2cc:	df 91       	pop	r29
 2ce:	cf 91       	pop	r28
 2d0:	08 95       	ret

000002d2 <Banner>:
 2d2:	80 ed       	ldi	r24, 0xD0	; 208
 2d4:	95 e0       	ldi	r25, 0x05	; 5
 2d6:	dd df       	rcall	.-70     	; 0x292 <UART_Puts>
 2d8:	89 e9       	ldi	r24, 0x99	; 153
 2da:	95 e0       	ldi	r25, 0x05	; 5
 2dc:	da df       	rcall	.-76     	; 0x292 <UART_Puts>
 2de:	85 e6       	ldi	r24, 0x65	; 101
 2e0:	95 e0       	ldi	r25, 0x05	; 5
 2e2:	d7 cf       	rjmp	.-82     	; 0x292 <UART_Puts>
 2e4:	08 95       	ret

000002e6 <HELP>:
 2e6:	8f e6       	ldi	r24, 0x6F	; 111
 2e8:	95 e0       	ldi	r25, 0x05	; 5
 2ea:	d3 cf       	rjmp	.-90     	; 0x292 <UART_Puts>
 2ec:	08 95       	ret

000002ee <LCD>:
 2ee:	84 e3       	ldi	r24, 0x34	; 52
 2f0:	80 93 f3 05 	sts	0x05F3, r24	; 0x8005f3 <DATA>
 2f4:	58 df       	rcall	.-336    	; 0x1a6 <BAUD_Byte_Set>
 2f6:	88 e0       	ldi	r24, 0x08	; 8
 2f8:	80 93 f3 05 	sts	0x05F3, r24	; 0x8005f3 <DATA>
 2fc:	54 df       	rcall	.-344    	; 0x1a6 <BAUD_Byte_Set>
 2fe:	82 e0       	ldi	r24, 0x02	; 2
 300:	80 93 f3 05 	sts	0x05F3, r24	; 0x8005f3 <DATA>
 304:	50 df       	rcall	.-352    	; 0x1a6 <BAUD_Byte_Set>
 306:	86 e0       	ldi	r24, 0x06	; 6
 308:	80 93 f3 05 	sts	0x05F3, r24	; 0x8005f3 <DATA>
 30c:	4c df       	rcall	.-360    	; 0x1a6 <BAUD_Byte_Set>
 30e:	8f e0       	ldi	r24, 0x0F	; 15
 310:	80 93 f3 05 	sts	0x05F3, r24	; 0x8005f3 <DATA>
 314:	48 df       	rcall	.-368    	; 0x1a6 <BAUD_Byte_Set>
 316:	8a e2       	ldi	r24, 0x2A	; 42
 318:	95 e0       	ldi	r25, 0x05	; 5
 31a:	cb cf       	rjmp	.-106    	; 0x2b2 <LCD_Puts>
 31c:	08 95       	ret

0000031e <ADC>:
 31e:	8f 92       	push	r8
 320:	9f 92       	push	r9
 322:	af 92       	push	r10
 324:	bf 92       	push	r11
 326:	cf 92       	push	r12
 328:	df 92       	push	r13
 32a:	ef 92       	push	r14
 32c:	ff 92       	push	r15
 32e:	10 92 f7 05 	sts	0x05F7, r1	; 0x8005f7 <ASCII>
 332:	88 df       	rcall	.-240    	; 0x244 <ADC_Get>
 334:	60 91 f4 05 	lds	r22, 0x05F4	; 0x8005f4 <HADC>
 338:	06 2e       	mov	r0, r22
 33a:	00 0c       	add	r0, r0
 33c:	77 0b       	sbc	r23, r23
 33e:	76 2f       	mov	r23, r22
 340:	66 27       	eor	r22, r22
 342:	80 91 05 06 	lds	r24, 0x0605	; 0x800605 <LADC>
 346:	68 0f       	add	r22, r24
 348:	71 1d       	adc	r23, r1
 34a:	87 fd       	sbrc	r24, 7
 34c:	7a 95       	dec	r23
 34e:	70 93 07 06 	sts	0x0607, r23	; 0x800607 <Acc+0x1>
 352:	60 93 06 06 	sts	0x0606, r22	; 0x800606 <Acc>
 356:	07 2e       	mov	r0, r23
 358:	00 0c       	add	r0, r0
 35a:	88 0b       	sbc	r24, r24
 35c:	99 0b       	sbc	r25, r25
 35e:	da d2       	rcall	.+1460   	; 0x914 <__floatsisf>
 360:	6b 01       	movw	r12, r22
 362:	7c 01       	movw	r14, r24
 364:	20 e0       	ldi	r18, 0x00	; 0
 366:	30 e4       	ldi	r19, 0x40	; 64
 368:	4c e1       	ldi	r20, 0x1C	; 28
 36a:	56 e4       	ldi	r21, 0x46	; 70
 36c:	a4 d3       	rcall	.+1864   	; 0xab6 <__mulsf3>
 36e:	4b 01       	movw	r8, r22
 370:	5c 01       	movw	r10, r24
 372:	a7 01       	movw	r20, r14
 374:	96 01       	movw	r18, r12
 376:	60 e0       	ldi	r22, 0x00	; 0
 378:	70 e0       	ldi	r23, 0x00	; 0
 37a:	80 e8       	ldi	r24, 0x80	; 128
 37c:	94 e4       	ldi	r25, 0x44	; 68
 37e:	ca d1       	rcall	.+916    	; 0x714 <__subsf3>
 380:	9b 01       	movw	r18, r22
 382:	ac 01       	movw	r20, r24
 384:	c5 01       	movw	r24, r10
 386:	b4 01       	movw	r22, r8
 388:	2a d2       	rcall	.+1108   	; 0x7de <__divsf3>
 38a:	60 93 fc 05 	sts	0x05FC, r22	; 0x8005fc <r>
 38e:	70 93 fd 05 	sts	0x05FD, r23	; 0x8005fd <r+0x1>
 392:	80 93 fe 05 	sts	0x05FE, r24	; 0x8005fe <r+0x2>
 396:	90 93 ff 05 	sts	0x05FF, r25	; 0x8005ff <r+0x3>
 39a:	20 e0       	ldi	r18, 0x00	; 0
 39c:	30 e4       	ldi	r19, 0x40	; 64
 39e:	4c e1       	ldi	r20, 0x1C	; 28
 3a0:	56 e4       	ldi	r21, 0x46	; 70
 3a2:	1d d2       	rcall	.+1082   	; 0x7de <__divsf3>
 3a4:	48 d3       	rcall	.+1680   	; 0xa36 <log>
 3a6:	23 e3       	ldi	r18, 0x33	; 51
 3a8:	33 e1       	ldi	r19, 0x13	; 19
 3aa:	45 e9       	ldi	r20, 0x95	; 149
 3ac:	53 e4       	ldi	r21, 0x43	; 67
 3ae:	83 d3       	rcall	.+1798   	; 0xab6 <__mulsf3>
 3b0:	20 e0       	ldi	r18, 0x00	; 0
 3b2:	30 ee       	ldi	r19, 0xE0	; 224
 3b4:	46 e7       	ldi	r20, 0x76	; 118
 3b6:	55 e4       	ldi	r21, 0x45	; 69
 3b8:	ae d1       	rcall	.+860    	; 0x716 <__addsf3>
 3ba:	9b 01       	movw	r18, r22
 3bc:	ac 01       	movw	r20, r24
 3be:	6e ec       	ldi	r22, 0xCE	; 206
 3c0:	7e ee       	ldi	r23, 0xEE	; 238
 3c2:	83 e8       	ldi	r24, 0x83	; 131
 3c4:	99 e4       	ldi	r25, 0x49	; 73
 3c6:	0b d2       	rcall	.+1046   	; 0x7de <__divsf3>
 3c8:	23 e3       	ldi	r18, 0x33	; 51
 3ca:	33 e9       	ldi	r19, 0x93	; 147
 3cc:	48 e8       	ldi	r20, 0x88	; 136
 3ce:	53 e4       	ldi	r21, 0x43	; 67
 3d0:	a1 d1       	rcall	.+834    	; 0x714 <__subsf3>
 3d2:	20 e0       	ldi	r18, 0x00	; 0
 3d4:	30 e0       	ldi	r19, 0x00	; 0
 3d6:	40 e1       	ldi	r20, 0x10	; 16
 3d8:	51 e4       	ldi	r21, 0x41	; 65
 3da:	6d d3       	rcall	.+1754   	; 0xab6 <__mulsf3>
 3dc:	20 e0       	ldi	r18, 0x00	; 0
 3de:	30 e0       	ldi	r19, 0x00	; 0
 3e0:	40 ea       	ldi	r20, 0xA0	; 160
 3e2:	50 e4       	ldi	r21, 0x40	; 64
 3e4:	fc d1       	rcall	.+1016   	; 0x7de <__divsf3>
 3e6:	20 e0       	ldi	r18, 0x00	; 0
 3e8:	30 e0       	ldi	r19, 0x00	; 0
 3ea:	40 e0       	ldi	r20, 0x00	; 0
 3ec:	52 e4       	ldi	r21, 0x42	; 66
 3ee:	93 d1       	rcall	.+806    	; 0x716 <__addsf3>
 3f0:	60 93 ee 05 	sts	0x05EE, r22	; 0x8005ee <__data_end>
 3f4:	70 93 ef 05 	sts	0x05EF, r23	; 0x8005ef <__data_end+0x1>
 3f8:	80 93 f0 05 	sts	0x05F0, r24	; 0x8005f0 <__data_end+0x2>
 3fc:	90 93 f1 05 	sts	0x05F1, r25	; 0x8005f1 <__data_end+0x3>
 400:	56 d2       	rcall	.+1196   	; 0x8ae <__fixsfsi>
 402:	dc 01       	movw	r26, r24
 404:	cb 01       	movw	r24, r22
 406:	4a e0       	ldi	r20, 0x0A	; 10
 408:	68 ef       	ldi	r22, 0xF8	; 248
 40a:	75 e0       	ldi	r23, 0x05	; 5
 40c:	f0 d3       	rcall	.+2016   	; 0xbee <__itoa_ncheck>
 40e:	82 e1       	ldi	r24, 0x12	; 18
 410:	93 e0       	ldi	r25, 0x03	; 3
 412:	3f df       	rcall	.-386    	; 0x292 <UART_Puts>
 414:	88 ef       	ldi	r24, 0xF8	; 248
 416:	95 e0       	ldi	r25, 0x05	; 5
 418:	3c df       	rcall	.-392    	; 0x292 <UART_Puts>
 41a:	83 e4       	ldi	r24, 0x43	; 67
 41c:	95 e0       	ldi	r25, 0x05	; 5
 41e:	39 df       	rcall	.-398    	; 0x292 <UART_Puts>
 420:	88 e1       	ldi	r24, 0x18	; 24
 422:	91 e0       	ldi	r25, 0x01	; 1
 424:	36 df       	rcall	.-404    	; 0x292 <UART_Puts>
 426:	8d e1       	ldi	r24, 0x1D	; 29
 428:	91 e0       	ldi	r25, 0x01	; 1
 42a:	33 df       	rcall	.-410    	; 0x292 <UART_Puts>
 42c:	00 91 c6 00 	lds	r16, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 430:	00 93 f7 05 	sts	0x05F7, r16	; 0x8005f7 <ASCII>
 434:	80 91 f7 05 	lds	r24, 0x05F7	; 0x8005f7 <ASCII>
 438:	85 36       	cpi	r24, 0x65	; 101
 43a:	09 f0       	breq	.+2      	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 43c:	7a cf       	rjmp	.-268    	; 0x332 <ADC+0x14>
 43e:	ff 90       	pop	r15
 440:	ef 90       	pop	r14
 442:	df 90       	pop	r13
 444:	cf 90       	pop	r12
 446:	bf 90       	pop	r11
 448:	af 90       	pop	r10
 44a:	9f 90       	pop	r9
 44c:	8f 90       	pop	r8
 44e:	08 95       	ret

00000450 <getEEPROMAddress>:
 450:	84 e2       	ldi	r24, 0x24	; 36
 452:	91 e0       	ldi	r25, 0x01	; 1
 454:	1e df       	rcall	.-452    	; 0x292 <UART_Puts>
 456:	e4 de       	rcall	.-568    	; 0x220 <UART_Get>
 458:	80 91 f7 05 	lds	r24, 0x05F7	; 0x8005f7 <ASCII>
 45c:	80 93 f5 05 	sts	0x05F5, r24	; 0x8005f5 <hAddress>
 460:	80 e5       	ldi	r24, 0x50	; 80
 462:	91 e0       	ldi	r25, 0x01	; 1
 464:	16 df       	rcall	.-468    	; 0x292 <UART_Puts>
 466:	dc de       	rcall	.-584    	; 0x220 <UART_Get>
 468:	80 91 f7 05 	lds	r24, 0x05F7	; 0x8005f7 <ASCII>
 46c:	80 93 f6 05 	sts	0x05F6, r24	; 0x8005f6 <lAddress>
 470:	08 95       	ret

00000472 <EEPROM>:
 472:	8a e7       	ldi	r24, 0x7A	; 122
 474:	91 e0       	ldi	r25, 0x01	; 1
 476:	0d df       	rcall	.-486    	; 0x292 <UART_Puts>
 478:	d3 de       	rcall	.-602    	; 0x220 <UART_Get>
 47a:	80 91 f7 05 	lds	r24, 0x05F7	; 0x8005f7 <ASCII>
 47e:	8f 7d       	andi	r24, 0xDF	; 223
 480:	82 35       	cpi	r24, 0x52	; 82
 482:	31 f4       	brne	.+12     	; 0x490 <EEPROM+0x1e>
 484:	89 ea       	ldi	r24, 0xA9	; 169
 486:	91 e0       	ldi	r25, 0x01	; 1
 488:	04 df       	rcall	.-504    	; 0x292 <UART_Puts>
 48a:	e2 df       	rcall	.-60     	; 0x450 <getEEPROMAddress>
 48c:	f6 ce       	rjmp	.-532    	; 0x27a <EEPROM_Read>
 48e:	08 95       	ret
 490:	87 35       	cpi	r24, 0x57	; 87
 492:	71 f4       	brne	.+28     	; 0x4b0 <EEPROM+0x3e>
 494:	8c ec       	ldi	r24, 0xCC	; 204
 496:	91 e0       	ldi	r25, 0x01	; 1
 498:	fc de       	rcall	.-520    	; 0x292 <UART_Puts>
 49a:	da df       	rcall	.-76     	; 0x450 <getEEPROMAddress>
 49c:	8e ee       	ldi	r24, 0xEE	; 238
 49e:	91 e0       	ldi	r25, 0x01	; 1
 4a0:	f8 de       	rcall	.-528    	; 0x292 <UART_Puts>
 4a2:	be de       	rcall	.-644    	; 0x220 <UART_Get>
 4a4:	80 91 f7 05 	lds	r24, 0x05F7	; 0x8005f7 <ASCII>
 4a8:	80 93 f2 05 	sts	0x05F2, r24	; 0x8005f2 <content>
 4ac:	db ce       	rjmp	.-586    	; 0x264 <EEPROM_Write>
 4ae:	08 95       	ret
 4b0:	85 34       	cpi	r24, 0x45	; 69
 4b2:	21 f4       	brne	.+8      	; 0x4bc <EEPROM+0x4a>
 4b4:	8d e2       	ldi	r24, 0x2D	; 45
 4b6:	92 e0       	ldi	r25, 0x02	; 2
 4b8:	ec ce       	rjmp	.-552    	; 0x292 <UART_Puts>
 4ba:	08 95       	ret
 4bc:	86 e4       	ldi	r24, 0x46	; 70
 4be:	95 e0       	ldi	r25, 0x05	; 5
 4c0:	e8 ce       	rjmp	.-560    	; 0x292 <UART_Puts>
 4c2:	08 95       	ret

000004c4 <BAUD_Set>:
 4c4:	88 e3       	ldi	r24, 0x38	; 56
 4c6:	92 e0       	ldi	r25, 0x02	; 2
 4c8:	e4 de       	rcall	.-568    	; 0x292 <UART_Puts>
 4ca:	aa de       	rcall	.-684    	; 0x220 <UART_Get>
 4cc:	80 91 f7 05 	lds	r24, 0x05F7	; 0x8005f7 <ASCII>
 4d0:	83 36       	cpi	r24, 0x63	; 99
 4d2:	d1 f0       	breq	.+52     	; 0x508 <BAUD_Set+0x44>
 4d4:	38 f4       	brcc	.+14     	; 0x4e4 <BAUD_Set+0x20>
 4d6:	81 36       	cpi	r24, 0x61	; 97
 4d8:	59 f0       	breq	.+22     	; 0x4f0 <BAUD_Set+0x2c>
 4da:	80 f4       	brcc	.+32     	; 0x4fc <BAUD_Set+0x38>
 4dc:	8b 31       	cpi	r24, 0x1B	; 27
 4de:	09 f4       	brne	.+2      	; 0x4e2 <BAUD_Set+0x1e>
 4e0:	33 c0       	rjmp	.+102    	; 0x548 <BAUD_Set+0x84>
 4e2:	2a c0       	rjmp	.+84     	; 0x538 <BAUD_Set+0x74>
 4e4:	85 36       	cpi	r24, 0x65	; 101
 4e6:	e1 f0       	breq	.+56     	; 0x520 <BAUD_Set+0x5c>
 4e8:	a8 f0       	brcs	.+42     	; 0x514 <BAUD_Set+0x50>
 4ea:	86 36       	cpi	r24, 0x66	; 102
 4ec:	f9 f0       	breq	.+62     	; 0x52c <BAUD_Set+0x68>
 4ee:	24 c0       	rjmp	.+72     	; 0x538 <BAUD_Set+0x74>
 4f0:	81 ea       	ldi	r24, 0xA1	; 161
 4f2:	92 e0       	ldi	r25, 0x02	; 2
 4f4:	ce de       	rcall	.-612    	; 0x292 <UART_Puts>
 4f6:	10 e0       	ldi	r17, 0x00	; 0
 4f8:	07 e6       	ldi	r16, 0x67	; 103
 4fa:	22 c0       	rjmp	.+68     	; 0x540 <BAUD_Set+0x7c>
 4fc:	8e eb       	ldi	r24, 0xBE	; 190
 4fe:	92 e0       	ldi	r25, 0x02	; 2
 500:	c8 de       	rcall	.-624    	; 0x292 <UART_Puts>
 502:	10 e0       	ldi	r17, 0x00	; 0
 504:	0f ec       	ldi	r16, 0xCF	; 207
 506:	1c c0       	rjmp	.+56     	; 0x540 <BAUD_Set+0x7c>
 508:	8b ed       	ldi	r24, 0xDB	; 219
 50a:	92 e0       	ldi	r25, 0x02	; 2
 50c:	c2 de       	rcall	.-636    	; 0x292 <UART_Puts>
 50e:	11 e0       	ldi	r17, 0x01	; 1
 510:	0f e9       	ldi	r16, 0x9F	; 159
 512:	16 c0       	rjmp	.+44     	; 0x540 <BAUD_Set+0x7c>
 514:	88 ef       	ldi	r24, 0xF8	; 248
 516:	92 e0       	ldi	r25, 0x02	; 2
 518:	bc de       	rcall	.-648    	; 0x292 <UART_Puts>
 51a:	13 e0       	ldi	r17, 0x03	; 3
 51c:	0f e3       	ldi	r16, 0x3F	; 63
 51e:	10 c0       	rjmp	.+32     	; 0x540 <BAUD_Set+0x7c>
 520:	85 e1       	ldi	r24, 0x15	; 21
 522:	93 e0       	ldi	r25, 0x03	; 3
 524:	b6 de       	rcall	.-660    	; 0x292 <UART_Puts>
 526:	16 e0       	ldi	r17, 0x06	; 6
 528:	0f e7       	ldi	r16, 0x7F	; 127
 52a:	0a c0       	rjmp	.+20     	; 0x540 <BAUD_Set+0x7c>
 52c:	81 e3       	ldi	r24, 0x31	; 49
 52e:	93 e0       	ldi	r25, 0x03	; 3
 530:	b0 de       	rcall	.-672    	; 0x292 <UART_Puts>
 532:	1c e0       	ldi	r17, 0x0C	; 12
 534:	0f ef       	ldi	r16, 0xFF	; 255
 536:	04 c0       	rjmp	.+8      	; 0x540 <BAUD_Set+0x7c>
 538:	8d e4       	ldi	r24, 0x4D	; 77
 53a:	93 e0       	ldi	r25, 0x03	; 3
 53c:	aa de       	rcall	.-684    	; 0x292 <UART_Puts>
 53e:	c2 cf       	rjmp	.-124    	; 0x4c4 <BAUD_Set>
 540:	10 93 c5 00 	sts	0x00C5, r17	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 544:	00 93 c4 00 	sts	0x00C4, r16	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 548:	08 95       	ret

0000054a <Data_Size_Set>:
 54a:	80 e6       	ldi	r24, 0x60	; 96
 54c:	93 e0       	ldi	r25, 0x03	; 3
 54e:	a1 de       	rcall	.-702    	; 0x292 <UART_Puts>
 550:	67 de       	rcall	.-818    	; 0x220 <UART_Get>
 552:	80 91 f7 05 	lds	r24, 0x05F7	; 0x8005f7 <ASCII>
 556:	86 33       	cpi	r24, 0x36	; 54
 558:	09 f1       	breq	.+66     	; 0x59c <Data_Size_Set+0x52>
 55a:	30 f4       	brcc	.+12     	; 0x568 <Data_Size_Set+0x1e>
 55c:	8b 31       	cpi	r24, 0x1B	; 27
 55e:	09 f4       	brne	.+2      	; 0x562 <Data_Size_Set+0x18>
 560:	65 c0       	rjmp	.+202    	; 0x62c <Data_Size_Set+0xe2>
 562:	85 33       	cpi	r24, 0x35	; 53
 564:	49 f0       	breq	.+18     	; 0x578 <Data_Size_Set+0x2e>
 566:	f1 cf       	rjmp	.-30     	; 0x54a <Data_Size_Set>
 568:	88 33       	cpi	r24, 0x38	; 56
 56a:	09 f4       	brne	.+2      	; 0x56e <Data_Size_Set+0x24>
 56c:	3c c0       	rjmp	.+120    	; 0x5e6 <Data_Size_Set+0x9c>
 56e:	40 f1       	brcs	.+80     	; 0x5c0 <Data_Size_Set+0x76>
 570:	89 33       	cpi	r24, 0x39	; 57
 572:	09 f4       	brne	.+2      	; 0x576 <Data_Size_Set+0x2c>
 574:	4a c0       	rjmp	.+148    	; 0x60a <Data_Size_Set+0xc0>
 576:	e9 cf       	rjmp	.-46     	; 0x54a <Data_Size_Set>
 578:	81 ec       	ldi	r24, 0xC1	; 193
 57a:	93 e0       	ldi	r25, 0x03	; 3
 57c:	8a de       	rcall	.-748    	; 0x292 <UART_Puts>
 57e:	e1 ec       	ldi	r30, 0xC1	; 193
 580:	f0 e0       	ldi	r31, 0x00	; 0
 582:	80 81       	ld	r24, Z
 584:	91 81       	ldd	r25, Z+1	; 0x01
 586:	8b 7f       	andi	r24, 0xFB	; 251
 588:	91 83       	std	Z+1, r25	; 0x01
 58a:	80 83       	st	Z, r24
 58c:	e2 ec       	ldi	r30, 0xC2	; 194
 58e:	f0 e0       	ldi	r31, 0x00	; 0
 590:	80 81       	ld	r24, Z
 592:	91 81       	ldd	r25, Z+1	; 0x01
 594:	8b 7f       	andi	r24, 0xFB	; 251
 596:	91 83       	std	Z+1, r25	; 0x01
 598:	80 83       	st	Z, r24
 59a:	08 95       	ret
 59c:	8c ec       	ldi	r24, 0xCC	; 204
 59e:	93 e0       	ldi	r25, 0x03	; 3
 5a0:	78 de       	rcall	.-784    	; 0x292 <UART_Puts>
 5a2:	e1 ec       	ldi	r30, 0xC1	; 193
 5a4:	f0 e0       	ldi	r31, 0x00	; 0
 5a6:	80 81       	ld	r24, Z
 5a8:	91 81       	ldd	r25, Z+1	; 0x01
 5aa:	8b 7f       	andi	r24, 0xFB	; 251
 5ac:	91 83       	std	Z+1, r25	; 0x01
 5ae:	80 83       	st	Z, r24
 5b0:	e2 ec       	ldi	r30, 0xC2	; 194
 5b2:	f0 e0       	ldi	r31, 0x00	; 0
 5b4:	80 81       	ld	r24, Z
 5b6:	91 81       	ldd	r25, Z+1	; 0x01
 5b8:	84 60       	ori	r24, 0x04	; 4
 5ba:	91 83       	std	Z+1, r25	; 0x01
 5bc:	80 83       	st	Z, r24
 5be:	08 95       	ret
 5c0:	87 ed       	ldi	r24, 0xD7	; 215
 5c2:	93 e0       	ldi	r25, 0x03	; 3
 5c4:	66 de       	rcall	.-820    	; 0x292 <UART_Puts>
 5c6:	e1 ec       	ldi	r30, 0xC1	; 193
 5c8:	f0 e0       	ldi	r31, 0x00	; 0
 5ca:	80 81       	ld	r24, Z
 5cc:	91 81       	ldd	r25, Z+1	; 0x01
 5ce:	8b 7f       	andi	r24, 0xFB	; 251
 5d0:	91 83       	std	Z+1, r25	; 0x01
 5d2:	80 83       	st	Z, r24
 5d4:	e2 ec       	ldi	r30, 0xC2	; 194
 5d6:	f0 e0       	ldi	r31, 0x00	; 0
 5d8:	80 81       	ld	r24, Z
 5da:	91 81       	ldd	r25, Z+1	; 0x01
 5dc:	8d 7f       	andi	r24, 0xFD	; 253
 5de:	84 60       	ori	r24, 0x04	; 4
 5e0:	91 83       	std	Z+1, r25	; 0x01
 5e2:	80 83       	st	Z, r24
 5e4:	08 95       	ret
 5e6:	82 ee       	ldi	r24, 0xE2	; 226
 5e8:	93 e0       	ldi	r25, 0x03	; 3
 5ea:	53 de       	rcall	.-858    	; 0x292 <UART_Puts>
 5ec:	e1 ec       	ldi	r30, 0xC1	; 193
 5ee:	f0 e0       	ldi	r31, 0x00	; 0
 5f0:	80 81       	ld	r24, Z
 5f2:	91 81       	ldd	r25, Z+1	; 0x01
 5f4:	8b 7f       	andi	r24, 0xFB	; 251
 5f6:	91 83       	std	Z+1, r25	; 0x01
 5f8:	80 83       	st	Z, r24
 5fa:	e2 ec       	ldi	r30, 0xC2	; 194
 5fc:	f0 e0       	ldi	r31, 0x00	; 0
 5fe:	80 81       	ld	r24, Z
 600:	91 81       	ldd	r25, Z+1	; 0x01
 602:	86 60       	ori	r24, 0x06	; 6
 604:	91 83       	std	Z+1, r25	; 0x01
 606:	80 83       	st	Z, r24
 608:	08 95       	ret
 60a:	8d ee       	ldi	r24, 0xED	; 237
 60c:	93 e0       	ldi	r25, 0x03	; 3
 60e:	41 de       	rcall	.-894    	; 0x292 <UART_Puts>
 610:	e1 ec       	ldi	r30, 0xC1	; 193
 612:	f0 e0       	ldi	r31, 0x00	; 0
 614:	80 81       	ld	r24, Z
 616:	91 81       	ldd	r25, Z+1	; 0x01
 618:	84 60       	ori	r24, 0x04	; 4
 61a:	91 83       	std	Z+1, r25	; 0x01
 61c:	80 83       	st	Z, r24
 61e:	e2 ec       	ldi	r30, 0xC2	; 194
 620:	f0 e0       	ldi	r31, 0x00	; 0
 622:	80 81       	ld	r24, Z
 624:	91 81       	ldd	r25, Z+1	; 0x01
 626:	86 60       	ori	r24, 0x06	; 6
 628:	91 83       	std	Z+1, r25	; 0x01
 62a:	80 83       	st	Z, r24
 62c:	08 95       	ret

0000062e <Parity_Set>:
 62e:	88 ef       	ldi	r24, 0xF8	; 248
 630:	93 e0       	ldi	r25, 0x03	; 3
 632:	2f de       	rcall	.-930    	; 0x292 <UART_Puts>
 634:	f5 dd       	rcall	.-1046   	; 0x220 <UART_Get>
 636:	80 91 f7 05 	lds	r24, 0x05F7	; 0x8005f7 <ASCII>
 63a:	84 36       	cpi	r24, 0x64	; 100
 63c:	49 f0       	breq	.+18     	; 0x650 <Parity_Set+0x22>
 63e:	18 f4       	brcc	.+6      	; 0x646 <Parity_Set+0x18>
 640:	8b 31       	cpi	r24, 0x1B	; 27
 642:	19 f1       	breq	.+70     	; 0x68a <Parity_Set+0x5c>
 644:	1e c0       	rjmp	.+60     	; 0x682 <Parity_Set+0x54>
 646:	85 36       	cpi	r24, 0x65	; 101
 648:	59 f0       	breq	.+22     	; 0x660 <Parity_Set+0x32>
 64a:	8f 36       	cpi	r24, 0x6F	; 111
 64c:	91 f0       	breq	.+36     	; 0x672 <Parity_Set+0x44>
 64e:	19 c0       	rjmp	.+50     	; 0x682 <Parity_Set+0x54>
 650:	e2 ec       	ldi	r30, 0xC2	; 194
 652:	f0 e0       	ldi	r31, 0x00	; 0
 654:	80 81       	ld	r24, Z
 656:	91 81       	ldd	r25, Z+1	; 0x01
 658:	8f 7c       	andi	r24, 0xCF	; 207
 65a:	91 83       	std	Z+1, r25	; 0x01
 65c:	80 83       	st	Z, r24
 65e:	08 95       	ret
 660:	e2 ec       	ldi	r30, 0xC2	; 194
 662:	f0 e0       	ldi	r31, 0x00	; 0
 664:	80 81       	ld	r24, Z
 666:	91 81       	ldd	r25, Z+1	; 0x01
 668:	8f 7e       	andi	r24, 0xEF	; 239
 66a:	80 62       	ori	r24, 0x20	; 32
 66c:	91 83       	std	Z+1, r25	; 0x01
 66e:	80 83       	st	Z, r24
 670:	08 95       	ret
 672:	e2 ec       	ldi	r30, 0xC2	; 194
 674:	f0 e0       	ldi	r31, 0x00	; 0
 676:	80 81       	ld	r24, Z
 678:	91 81       	ldd	r25, Z+1	; 0x01
 67a:	80 63       	ori	r24, 0x30	; 48
 67c:	91 83       	std	Z+1, r25	; 0x01
 67e:	80 83       	st	Z, r24
 680:	08 95       	ret
 682:	8d e4       	ldi	r24, 0x4D	; 77
 684:	93 e0       	ldi	r25, 0x03	; 3
 686:	05 de       	rcall	.-1014   	; 0x292 <UART_Puts>
 688:	d2 cf       	rjmp	.-92     	; 0x62e <Parity_Set>
 68a:	08 95       	ret

0000068c <USART>:
 68c:	87 e5       	ldi	r24, 0x57	; 87
 68e:	94 e0       	ldi	r25, 0x04	; 4
 690:	00 de       	rcall	.-1024   	; 0x292 <UART_Puts>
 692:	80 e8       	ldi	r24, 0x80	; 128
 694:	94 e0       	ldi	r25, 0x04	; 4
 696:	fd dd       	rcall	.-1030   	; 0x292 <UART_Puts>
 698:	c3 dd       	rcall	.-1146   	; 0x220 <UART_Get>
 69a:	80 91 f7 05 	lds	r24, 0x05F7	; 0x8005f7 <ASCII>
 69e:	81 33       	cpi	r24, 0x31	; 49
 6a0:	49 f0       	breq	.+18     	; 0x6b4 <USART+0x28>
 6a2:	18 f4       	brcc	.+6      	; 0x6aa <USART+0x1e>
 6a4:	8b 31       	cpi	r24, 0x1B	; 27
 6a6:	79 f0       	breq	.+30     	; 0x6c6 <USART+0x3a>
 6a8:	0b c0       	rjmp	.+22     	; 0x6c0 <USART+0x34>
 6aa:	82 33       	cpi	r24, 0x32	; 50
 6ac:	29 f0       	breq	.+10     	; 0x6b8 <USART+0x2c>
 6ae:	83 33       	cpi	r24, 0x33	; 51
 6b0:	29 f0       	breq	.+10     	; 0x6bc <USART+0x30>
 6b2:	06 c0       	rjmp	.+12     	; 0x6c0 <USART+0x34>
 6b4:	07 cf       	rjmp	.-498    	; 0x4c4 <BAUD_Set>
 6b6:	08 95       	ret
 6b8:	48 cf       	rjmp	.-368    	; 0x54a <Data_Size_Set>
 6ba:	08 95       	ret
 6bc:	b8 cf       	rjmp	.-144    	; 0x62e <Parity_Set>
 6be:	08 95       	ret
 6c0:	8a ec       	ldi	r24, 0xCA	; 202
 6c2:	94 e0       	ldi	r25, 0x04	; 4
 6c4:	e6 cd       	rjmp	.-1076   	; 0x292 <UART_Puts>
 6c6:	08 95       	ret

000006c8 <Command>:
}

void Command(void)					//command interpreter
{
	UART_Puts(MS3);
 6c8:	8f e6       	ldi	r24, 0x6F	; 111
 6ca:	95 e0       	ldi	r25, 0x05	; 5
 6cc:	e2 dd       	rcall	.-1084   	; 0x292 <UART_Puts>
	ASCII = '\0';						
 6ce:	10 92 f7 05 	sts	0x05F7, r1	; 0x8005f7 <ASCII>
	while (ASCII == '\0')
	{
		UART_Get();
 6d2:	a6 dd       	rcall	.-1204   	; 0x220 <UART_Get>

void Command(void)					//command interpreter
{
	UART_Puts(MS3);
	ASCII = '\0';						
	while (ASCII == '\0')
 6d4:	e0 91 f7 05 	lds	r30, 0x05F7	; 0x8005f7 <ASCII>
 6d8:	ee 23       	and	r30, r30
 6da:	d9 f3       	breq	.-10     	; 0x6d2 <Command+0xa>
	{
		UART_Get();
	}
	switch (ASCII)
 6dc:	8e 2f       	mov	r24, r30
 6de:	90 e0       	ldi	r25, 0x00	; 0
 6e0:	fc 01       	movw	r30, r24
 6e2:	e1 54       	subi	r30, 0x41	; 65
 6e4:	f1 09       	sbc	r31, r1
 6e6:	e5 33       	cpi	r30, 0x35	; 53
 6e8:	f1 05       	cpc	r31, r1
 6ea:	58 f4       	brcc	.+22     	; 0x702 <Command+0x3a>
 6ec:	ec 5c       	subi	r30, 0xCC	; 204
 6ee:	ff 4f       	sbci	r31, 0xFF	; 255
	{
		case 'l':
		case 'L': 
			LCD();
 6f0:	78 c2       	rjmp	.+1264   	; 0xbe2 <__tablejump2__>
			break;
 6f2:	fd cd       	rjmp	.-1030   	; 0x2ee <LCD>
		case 'a':
		case 'A': 
			ADC();
 6f4:	08 95       	ret
			break;
 6f6:	13 ce       	rjmp	.-986    	; 0x31e <ADC>
		case 'e':
		case 'E': 
			EEPROM();
 6f8:	08 95       	ret
			break;
		case 'u': 
		case 'U':
			USART();
 6fa:	bb ce       	rjmp	.-650    	; 0x472 <EEPROM>
 6fc:	08 95       	ret
			break;
 6fe:	c6 cf       	rjmp	.-116    	; 0x68c <USART>
		default:
			UART_Puts(MS5);
 700:	08 95       	ret
 702:	86 e4       	ldi	r24, 0x46	; 70
 704:	95 e0       	ldi	r25, 0x05	; 5
 706:	c5 dd       	rcall	.-1142   	; 0x292 <UART_Puts>
			HELP();
 708:	ee cd       	rjmp	.-1060   	; 0x2e6 <HELP>
 70a:	08 95       	ret

0000070c <main>:
 70c:	2b dd       	rcall	.-1450   	; 0x164 <Mega328P_Init>
}

int main(void)
{
	Mega328P_Init();
	Banner();
 70e:	e1 dd       	rcall	.-1086   	; 0x2d2 <Banner>
	while (1)
	{
		Command();				//infinite command loop
 710:	db df       	rcall	.-74     	; 0x6c8 <Command>
 712:	fe cf       	rjmp	.-4      	; 0x710 <main+0x4>

00000714 <__subsf3>:
 714:	50 58       	subi	r21, 0x80	; 128

00000716 <__addsf3>:
 716:	bb 27       	eor	r27, r27
 718:	aa 27       	eor	r26, r26
 71a:	0e d0       	rcall	.+28     	; 0x738 <__addsf3x>
 71c:	4d c1       	rjmp	.+666    	; 0x9b8 <__fp_round>
 71e:	3e d1       	rcall	.+636    	; 0x99c <__fp_pscA>
 720:	30 f0       	brcs	.+12     	; 0x72e <__addsf3+0x18>
 722:	43 d1       	rcall	.+646    	; 0x9aa <__fp_pscB>
 724:	20 f0       	brcs	.+8      	; 0x72e <__addsf3+0x18>
 726:	31 f4       	brne	.+12     	; 0x734 <__addsf3+0x1e>
 728:	9f 3f       	cpi	r25, 0xFF	; 255
 72a:	11 f4       	brne	.+4      	; 0x730 <__addsf3+0x1a>
 72c:	1e f4       	brtc	.+6      	; 0x734 <__addsf3+0x1e>
 72e:	33 c1       	rjmp	.+614    	; 0x996 <__fp_nan>
 730:	0e f4       	brtc	.+2      	; 0x734 <__addsf3+0x1e>
 732:	e0 95       	com	r30
 734:	e7 fb       	bst	r30, 7
 736:	29 c1       	rjmp	.+594    	; 0x98a <__fp_inf>

00000738 <__addsf3x>:
 738:	e9 2f       	mov	r30, r25
 73a:	4f d1       	rcall	.+670    	; 0x9da <__fp_split3>
 73c:	80 f3       	brcs	.-32     	; 0x71e <__addsf3+0x8>
 73e:	ba 17       	cp	r27, r26
 740:	62 07       	cpc	r22, r18
 742:	73 07       	cpc	r23, r19
 744:	84 07       	cpc	r24, r20
 746:	95 07       	cpc	r25, r21
 748:	18 f0       	brcs	.+6      	; 0x750 <__addsf3x+0x18>
 74a:	71 f4       	brne	.+28     	; 0x768 <__addsf3x+0x30>
 74c:	9e f5       	brtc	.+102    	; 0x7b4 <__addsf3x+0x7c>
 74e:	67 c1       	rjmp	.+718    	; 0xa1e <__fp_zero>
 750:	0e f4       	brtc	.+2      	; 0x754 <__addsf3x+0x1c>
 752:	e0 95       	com	r30
 754:	0b 2e       	mov	r0, r27
 756:	ba 2f       	mov	r27, r26
 758:	a0 2d       	mov	r26, r0
 75a:	0b 01       	movw	r0, r22
 75c:	b9 01       	movw	r22, r18
 75e:	90 01       	movw	r18, r0
 760:	0c 01       	movw	r0, r24
 762:	ca 01       	movw	r24, r20
 764:	a0 01       	movw	r20, r0
 766:	11 24       	eor	r1, r1
 768:	ff 27       	eor	r31, r31
 76a:	59 1b       	sub	r21, r25
 76c:	99 f0       	breq	.+38     	; 0x794 <__addsf3x+0x5c>
 76e:	59 3f       	cpi	r21, 0xF9	; 249
 770:	50 f4       	brcc	.+20     	; 0x786 <__addsf3x+0x4e>
 772:	50 3e       	cpi	r21, 0xE0	; 224
 774:	68 f1       	brcs	.+90     	; 0x7d0 <__addsf3x+0x98>
 776:	1a 16       	cp	r1, r26
 778:	f0 40       	sbci	r31, 0x00	; 0
 77a:	a2 2f       	mov	r26, r18
 77c:	23 2f       	mov	r18, r19
 77e:	34 2f       	mov	r19, r20
 780:	44 27       	eor	r20, r20
 782:	58 5f       	subi	r21, 0xF8	; 248
 784:	f3 cf       	rjmp	.-26     	; 0x76c <__addsf3x+0x34>
 786:	46 95       	lsr	r20
 788:	37 95       	ror	r19
 78a:	27 95       	ror	r18
 78c:	a7 95       	ror	r26
 78e:	f0 40       	sbci	r31, 0x00	; 0
 790:	53 95       	inc	r21
 792:	c9 f7       	brne	.-14     	; 0x786 <__addsf3x+0x4e>
 794:	7e f4       	brtc	.+30     	; 0x7b4 <__addsf3x+0x7c>
 796:	1f 16       	cp	r1, r31
 798:	ba 0b       	sbc	r27, r26
 79a:	62 0b       	sbc	r22, r18
 79c:	73 0b       	sbc	r23, r19
 79e:	84 0b       	sbc	r24, r20
 7a0:	ba f0       	brmi	.+46     	; 0x7d0 <__addsf3x+0x98>
 7a2:	91 50       	subi	r25, 0x01	; 1
 7a4:	a1 f0       	breq	.+40     	; 0x7ce <__addsf3x+0x96>
 7a6:	ff 0f       	add	r31, r31
 7a8:	bb 1f       	adc	r27, r27
 7aa:	66 1f       	adc	r22, r22
 7ac:	77 1f       	adc	r23, r23
 7ae:	88 1f       	adc	r24, r24
 7b0:	c2 f7       	brpl	.-16     	; 0x7a2 <__addsf3x+0x6a>
 7b2:	0e c0       	rjmp	.+28     	; 0x7d0 <__addsf3x+0x98>
 7b4:	ba 0f       	add	r27, r26
 7b6:	62 1f       	adc	r22, r18
 7b8:	73 1f       	adc	r23, r19
 7ba:	84 1f       	adc	r24, r20
 7bc:	48 f4       	brcc	.+18     	; 0x7d0 <__addsf3x+0x98>
 7be:	87 95       	ror	r24
 7c0:	77 95       	ror	r23
 7c2:	67 95       	ror	r22
 7c4:	b7 95       	ror	r27
 7c6:	f7 95       	ror	r31
 7c8:	9e 3f       	cpi	r25, 0xFE	; 254
 7ca:	08 f0       	brcs	.+2      	; 0x7ce <__addsf3x+0x96>
 7cc:	b3 cf       	rjmp	.-154    	; 0x734 <__addsf3+0x1e>
 7ce:	93 95       	inc	r25
 7d0:	88 0f       	add	r24, r24
 7d2:	08 f0       	brcs	.+2      	; 0x7d6 <__addsf3x+0x9e>
 7d4:	99 27       	eor	r25, r25
 7d6:	ee 0f       	add	r30, r30
 7d8:	97 95       	ror	r25
 7da:	87 95       	ror	r24
 7dc:	08 95       	ret

000007de <__divsf3>:
 7de:	0c d0       	rcall	.+24     	; 0x7f8 <__divsf3x>
 7e0:	eb c0       	rjmp	.+470    	; 0x9b8 <__fp_round>
 7e2:	e3 d0       	rcall	.+454    	; 0x9aa <__fp_pscB>
 7e4:	40 f0       	brcs	.+16     	; 0x7f6 <__divsf3+0x18>
 7e6:	da d0       	rcall	.+436    	; 0x99c <__fp_pscA>
 7e8:	30 f0       	brcs	.+12     	; 0x7f6 <__divsf3+0x18>
 7ea:	21 f4       	brne	.+8      	; 0x7f4 <__divsf3+0x16>
 7ec:	5f 3f       	cpi	r21, 0xFF	; 255
 7ee:	19 f0       	breq	.+6      	; 0x7f6 <__divsf3+0x18>
 7f0:	cc c0       	rjmp	.+408    	; 0x98a <__fp_inf>
 7f2:	51 11       	cpse	r21, r1
 7f4:	15 c1       	rjmp	.+554    	; 0xa20 <__fp_szero>
 7f6:	cf c0       	rjmp	.+414    	; 0x996 <__fp_nan>

000007f8 <__divsf3x>:
 7f8:	f0 d0       	rcall	.+480    	; 0x9da <__fp_split3>
 7fa:	98 f3       	brcs	.-26     	; 0x7e2 <__divsf3+0x4>

000007fc <__divsf3_pse>:
 7fc:	99 23       	and	r25, r25
 7fe:	c9 f3       	breq	.-14     	; 0x7f2 <__divsf3+0x14>
 800:	55 23       	and	r21, r21
 802:	b1 f3       	breq	.-20     	; 0x7f0 <__divsf3+0x12>
 804:	95 1b       	sub	r25, r21
 806:	55 0b       	sbc	r21, r21
 808:	bb 27       	eor	r27, r27
 80a:	aa 27       	eor	r26, r26
 80c:	62 17       	cp	r22, r18
 80e:	73 07       	cpc	r23, r19
 810:	84 07       	cpc	r24, r20
 812:	38 f0       	brcs	.+14     	; 0x822 <__divsf3_pse+0x26>
 814:	9f 5f       	subi	r25, 0xFF	; 255
 816:	5f 4f       	sbci	r21, 0xFF	; 255
 818:	22 0f       	add	r18, r18
 81a:	33 1f       	adc	r19, r19
 81c:	44 1f       	adc	r20, r20
 81e:	aa 1f       	adc	r26, r26
 820:	a9 f3       	breq	.-22     	; 0x80c <__divsf3_pse+0x10>
 822:	33 d0       	rcall	.+102    	; 0x88a <__divsf3_pse+0x8e>
 824:	0e 2e       	mov	r0, r30
 826:	3a f0       	brmi	.+14     	; 0x836 <__divsf3_pse+0x3a>
 828:	e0 e8       	ldi	r30, 0x80	; 128
 82a:	30 d0       	rcall	.+96     	; 0x88c <__divsf3_pse+0x90>
 82c:	91 50       	subi	r25, 0x01	; 1
 82e:	50 40       	sbci	r21, 0x00	; 0
 830:	e6 95       	lsr	r30
 832:	00 1c       	adc	r0, r0
 834:	ca f7       	brpl	.-14     	; 0x828 <__divsf3_pse+0x2c>
 836:	29 d0       	rcall	.+82     	; 0x88a <__divsf3_pse+0x8e>
 838:	fe 2f       	mov	r31, r30
 83a:	27 d0       	rcall	.+78     	; 0x88a <__divsf3_pse+0x8e>
 83c:	66 0f       	add	r22, r22
 83e:	77 1f       	adc	r23, r23
 840:	88 1f       	adc	r24, r24
 842:	bb 1f       	adc	r27, r27
 844:	26 17       	cp	r18, r22
 846:	37 07       	cpc	r19, r23
 848:	48 07       	cpc	r20, r24
 84a:	ab 07       	cpc	r26, r27
 84c:	b0 e8       	ldi	r27, 0x80	; 128
 84e:	09 f0       	breq	.+2      	; 0x852 <__divsf3_pse+0x56>
 850:	bb 0b       	sbc	r27, r27
 852:	80 2d       	mov	r24, r0
 854:	bf 01       	movw	r22, r30
 856:	ff 27       	eor	r31, r31
 858:	93 58       	subi	r25, 0x83	; 131
 85a:	5f 4f       	sbci	r21, 0xFF	; 255
 85c:	2a f0       	brmi	.+10     	; 0x868 <__divsf3_pse+0x6c>
 85e:	9e 3f       	cpi	r25, 0xFE	; 254
 860:	51 05       	cpc	r21, r1
 862:	68 f0       	brcs	.+26     	; 0x87e <__divsf3_pse+0x82>
 864:	92 c0       	rjmp	.+292    	; 0x98a <__fp_inf>
 866:	dc c0       	rjmp	.+440    	; 0xa20 <__fp_szero>
 868:	5f 3f       	cpi	r21, 0xFF	; 255
 86a:	ec f3       	brlt	.-6      	; 0x866 <__divsf3_pse+0x6a>
 86c:	98 3e       	cpi	r25, 0xE8	; 232
 86e:	dc f3       	brlt	.-10     	; 0x866 <__divsf3_pse+0x6a>
 870:	86 95       	lsr	r24
 872:	77 95       	ror	r23
 874:	67 95       	ror	r22
 876:	b7 95       	ror	r27
 878:	f7 95       	ror	r31
 87a:	9f 5f       	subi	r25, 0xFF	; 255
 87c:	c9 f7       	brne	.-14     	; 0x870 <__divsf3_pse+0x74>
 87e:	88 0f       	add	r24, r24
 880:	91 1d       	adc	r25, r1
 882:	96 95       	lsr	r25
 884:	87 95       	ror	r24
 886:	97 f9       	bld	r25, 7
 888:	08 95       	ret
 88a:	e1 e0       	ldi	r30, 0x01	; 1
 88c:	66 0f       	add	r22, r22
 88e:	77 1f       	adc	r23, r23
 890:	88 1f       	adc	r24, r24
 892:	bb 1f       	adc	r27, r27
 894:	62 17       	cp	r22, r18
 896:	73 07       	cpc	r23, r19
 898:	84 07       	cpc	r24, r20
 89a:	ba 07       	cpc	r27, r26
 89c:	20 f0       	brcs	.+8      	; 0x8a6 <__divsf3_pse+0xaa>
 89e:	62 1b       	sub	r22, r18
 8a0:	73 0b       	sbc	r23, r19
 8a2:	84 0b       	sbc	r24, r20
 8a4:	ba 0b       	sbc	r27, r26
 8a6:	ee 1f       	adc	r30, r30
 8a8:	88 f7       	brcc	.-30     	; 0x88c <__divsf3_pse+0x90>
 8aa:	e0 95       	com	r30
 8ac:	08 95       	ret

000008ae <__fixsfsi>:
 8ae:	04 d0       	rcall	.+8      	; 0x8b8 <__fixunssfsi>
 8b0:	68 94       	set
 8b2:	b1 11       	cpse	r27, r1
 8b4:	b5 c0       	rjmp	.+362    	; 0xa20 <__fp_szero>
 8b6:	08 95       	ret

000008b8 <__fixunssfsi>:
 8b8:	98 d0       	rcall	.+304    	; 0x9ea <__fp_splitA>
 8ba:	88 f0       	brcs	.+34     	; 0x8de <__fixunssfsi+0x26>
 8bc:	9f 57       	subi	r25, 0x7F	; 127
 8be:	90 f0       	brcs	.+36     	; 0x8e4 <__fixunssfsi+0x2c>
 8c0:	b9 2f       	mov	r27, r25
 8c2:	99 27       	eor	r25, r25
 8c4:	b7 51       	subi	r27, 0x17	; 23
 8c6:	a0 f0       	brcs	.+40     	; 0x8f0 <__fixunssfsi+0x38>
 8c8:	d1 f0       	breq	.+52     	; 0x8fe <__fixunssfsi+0x46>
 8ca:	66 0f       	add	r22, r22
 8cc:	77 1f       	adc	r23, r23
 8ce:	88 1f       	adc	r24, r24
 8d0:	99 1f       	adc	r25, r25
 8d2:	1a f0       	brmi	.+6      	; 0x8da <__fixunssfsi+0x22>
 8d4:	ba 95       	dec	r27
 8d6:	c9 f7       	brne	.-14     	; 0x8ca <__fixunssfsi+0x12>
 8d8:	12 c0       	rjmp	.+36     	; 0x8fe <__fixunssfsi+0x46>
 8da:	b1 30       	cpi	r27, 0x01	; 1
 8dc:	81 f0       	breq	.+32     	; 0x8fe <__fixunssfsi+0x46>
 8de:	9f d0       	rcall	.+318    	; 0xa1e <__fp_zero>
 8e0:	b1 e0       	ldi	r27, 0x01	; 1
 8e2:	08 95       	ret
 8e4:	9c c0       	rjmp	.+312    	; 0xa1e <__fp_zero>
 8e6:	67 2f       	mov	r22, r23
 8e8:	78 2f       	mov	r23, r24
 8ea:	88 27       	eor	r24, r24
 8ec:	b8 5f       	subi	r27, 0xF8	; 248
 8ee:	39 f0       	breq	.+14     	; 0x8fe <__fixunssfsi+0x46>
 8f0:	b9 3f       	cpi	r27, 0xF9	; 249
 8f2:	cc f3       	brlt	.-14     	; 0x8e6 <__fixunssfsi+0x2e>
 8f4:	86 95       	lsr	r24
 8f6:	77 95       	ror	r23
 8f8:	67 95       	ror	r22
 8fa:	b3 95       	inc	r27
 8fc:	d9 f7       	brne	.-10     	; 0x8f4 <__fixunssfsi+0x3c>
 8fe:	3e f4       	brtc	.+14     	; 0x90e <__stack+0xf>
 900:	90 95       	com	r25
 902:	80 95       	com	r24
 904:	70 95       	com	r23
 906:	61 95       	neg	r22
 908:	7f 4f       	sbci	r23, 0xFF	; 255
 90a:	8f 4f       	sbci	r24, 0xFF	; 255
 90c:	9f 4f       	sbci	r25, 0xFF	; 255
 90e:	08 95       	ret

00000910 <__floatunsisf>:
 910:	e8 94       	clt
 912:	09 c0       	rjmp	.+18     	; 0x926 <__floatsisf+0x12>

00000914 <__floatsisf>:
 914:	97 fb       	bst	r25, 7
 916:	3e f4       	brtc	.+14     	; 0x926 <__floatsisf+0x12>
 918:	90 95       	com	r25
 91a:	80 95       	com	r24
 91c:	70 95       	com	r23
 91e:	61 95       	neg	r22
 920:	7f 4f       	sbci	r23, 0xFF	; 255
 922:	8f 4f       	sbci	r24, 0xFF	; 255
 924:	9f 4f       	sbci	r25, 0xFF	; 255
 926:	99 23       	and	r25, r25
 928:	a9 f0       	breq	.+42     	; 0x954 <__floatsisf+0x40>
 92a:	f9 2f       	mov	r31, r25
 92c:	96 e9       	ldi	r25, 0x96	; 150
 92e:	bb 27       	eor	r27, r27
 930:	93 95       	inc	r25
 932:	f6 95       	lsr	r31
 934:	87 95       	ror	r24
 936:	77 95       	ror	r23
 938:	67 95       	ror	r22
 93a:	b7 95       	ror	r27
 93c:	f1 11       	cpse	r31, r1
 93e:	f8 cf       	rjmp	.-16     	; 0x930 <__floatsisf+0x1c>
 940:	fa f4       	brpl	.+62     	; 0x980 <__floatsisf+0x6c>
 942:	bb 0f       	add	r27, r27
 944:	11 f4       	brne	.+4      	; 0x94a <__floatsisf+0x36>
 946:	60 ff       	sbrs	r22, 0
 948:	1b c0       	rjmp	.+54     	; 0x980 <__floatsisf+0x6c>
 94a:	6f 5f       	subi	r22, 0xFF	; 255
 94c:	7f 4f       	sbci	r23, 0xFF	; 255
 94e:	8f 4f       	sbci	r24, 0xFF	; 255
 950:	9f 4f       	sbci	r25, 0xFF	; 255
 952:	16 c0       	rjmp	.+44     	; 0x980 <__floatsisf+0x6c>
 954:	88 23       	and	r24, r24
 956:	11 f0       	breq	.+4      	; 0x95c <__floatsisf+0x48>
 958:	96 e9       	ldi	r25, 0x96	; 150
 95a:	11 c0       	rjmp	.+34     	; 0x97e <__floatsisf+0x6a>
 95c:	77 23       	and	r23, r23
 95e:	21 f0       	breq	.+8      	; 0x968 <__floatsisf+0x54>
 960:	9e e8       	ldi	r25, 0x8E	; 142
 962:	87 2f       	mov	r24, r23
 964:	76 2f       	mov	r23, r22
 966:	05 c0       	rjmp	.+10     	; 0x972 <__floatsisf+0x5e>
 968:	66 23       	and	r22, r22
 96a:	71 f0       	breq	.+28     	; 0x988 <__floatsisf+0x74>
 96c:	96 e8       	ldi	r25, 0x86	; 134
 96e:	86 2f       	mov	r24, r22
 970:	70 e0       	ldi	r23, 0x00	; 0
 972:	60 e0       	ldi	r22, 0x00	; 0
 974:	2a f0       	brmi	.+10     	; 0x980 <__floatsisf+0x6c>
 976:	9a 95       	dec	r25
 978:	66 0f       	add	r22, r22
 97a:	77 1f       	adc	r23, r23
 97c:	88 1f       	adc	r24, r24
 97e:	da f7       	brpl	.-10     	; 0x976 <__floatsisf+0x62>
 980:	88 0f       	add	r24, r24
 982:	96 95       	lsr	r25
 984:	87 95       	ror	r24
 986:	97 f9       	bld	r25, 7
 988:	08 95       	ret

0000098a <__fp_inf>:
 98a:	97 f9       	bld	r25, 7
 98c:	9f 67       	ori	r25, 0x7F	; 127
 98e:	80 e8       	ldi	r24, 0x80	; 128
 990:	70 e0       	ldi	r23, 0x00	; 0
 992:	60 e0       	ldi	r22, 0x00	; 0
 994:	08 95       	ret

00000996 <__fp_nan>:
 996:	9f ef       	ldi	r25, 0xFF	; 255
 998:	80 ec       	ldi	r24, 0xC0	; 192
 99a:	08 95       	ret

0000099c <__fp_pscA>:
 99c:	00 24       	eor	r0, r0
 99e:	0a 94       	dec	r0
 9a0:	16 16       	cp	r1, r22
 9a2:	17 06       	cpc	r1, r23
 9a4:	18 06       	cpc	r1, r24
 9a6:	09 06       	cpc	r0, r25
 9a8:	08 95       	ret

000009aa <__fp_pscB>:
 9aa:	00 24       	eor	r0, r0
 9ac:	0a 94       	dec	r0
 9ae:	12 16       	cp	r1, r18
 9b0:	13 06       	cpc	r1, r19
 9b2:	14 06       	cpc	r1, r20
 9b4:	05 06       	cpc	r0, r21
 9b6:	08 95       	ret

000009b8 <__fp_round>:
 9b8:	09 2e       	mov	r0, r25
 9ba:	03 94       	inc	r0
 9bc:	00 0c       	add	r0, r0
 9be:	11 f4       	brne	.+4      	; 0x9c4 <__fp_round+0xc>
 9c0:	88 23       	and	r24, r24
 9c2:	52 f0       	brmi	.+20     	; 0x9d8 <__fp_round+0x20>
 9c4:	bb 0f       	add	r27, r27
 9c6:	40 f4       	brcc	.+16     	; 0x9d8 <__fp_round+0x20>
 9c8:	bf 2b       	or	r27, r31
 9ca:	11 f4       	brne	.+4      	; 0x9d0 <__fp_round+0x18>
 9cc:	60 ff       	sbrs	r22, 0
 9ce:	04 c0       	rjmp	.+8      	; 0x9d8 <__fp_round+0x20>
 9d0:	6f 5f       	subi	r22, 0xFF	; 255
 9d2:	7f 4f       	sbci	r23, 0xFF	; 255
 9d4:	8f 4f       	sbci	r24, 0xFF	; 255
 9d6:	9f 4f       	sbci	r25, 0xFF	; 255
 9d8:	08 95       	ret

000009da <__fp_split3>:
 9da:	57 fd       	sbrc	r21, 7
 9dc:	90 58       	subi	r25, 0x80	; 128
 9de:	44 0f       	add	r20, r20
 9e0:	55 1f       	adc	r21, r21
 9e2:	59 f0       	breq	.+22     	; 0x9fa <__fp_splitA+0x10>
 9e4:	5f 3f       	cpi	r21, 0xFF	; 255
 9e6:	71 f0       	breq	.+28     	; 0xa04 <__fp_splitA+0x1a>
 9e8:	47 95       	ror	r20

000009ea <__fp_splitA>:
 9ea:	88 0f       	add	r24, r24
 9ec:	97 fb       	bst	r25, 7
 9ee:	99 1f       	adc	r25, r25
 9f0:	61 f0       	breq	.+24     	; 0xa0a <__fp_splitA+0x20>
 9f2:	9f 3f       	cpi	r25, 0xFF	; 255
 9f4:	79 f0       	breq	.+30     	; 0xa14 <__fp_splitA+0x2a>
 9f6:	87 95       	ror	r24
 9f8:	08 95       	ret
 9fa:	12 16       	cp	r1, r18
 9fc:	13 06       	cpc	r1, r19
 9fe:	14 06       	cpc	r1, r20
 a00:	55 1f       	adc	r21, r21
 a02:	f2 cf       	rjmp	.-28     	; 0x9e8 <__fp_split3+0xe>
 a04:	46 95       	lsr	r20
 a06:	f1 df       	rcall	.-30     	; 0x9ea <__fp_splitA>
 a08:	08 c0       	rjmp	.+16     	; 0xa1a <__fp_splitA+0x30>
 a0a:	16 16       	cp	r1, r22
 a0c:	17 06       	cpc	r1, r23
 a0e:	18 06       	cpc	r1, r24
 a10:	99 1f       	adc	r25, r25
 a12:	f1 cf       	rjmp	.-30     	; 0x9f6 <__fp_splitA+0xc>
 a14:	86 95       	lsr	r24
 a16:	71 05       	cpc	r23, r1
 a18:	61 05       	cpc	r22, r1
 a1a:	08 94       	sec
 a1c:	08 95       	ret

00000a1e <__fp_zero>:
 a1e:	e8 94       	clt

00000a20 <__fp_szero>:
 a20:	bb 27       	eor	r27, r27
 a22:	66 27       	eor	r22, r22
 a24:	77 27       	eor	r23, r23
 a26:	cb 01       	movw	r24, r22
 a28:	97 f9       	bld	r25, 7
 a2a:	08 95       	ret
 a2c:	0e f0       	brts	.+2      	; 0xa30 <__fp_szero+0x10>
 a2e:	a6 c0       	rjmp	.+332    	; 0xb7c <__fp_mpack>
 a30:	b2 cf       	rjmp	.-156    	; 0x996 <__fp_nan>
 a32:	68 94       	set
 a34:	aa cf       	rjmp	.-172    	; 0x98a <__fp_inf>

00000a36 <log>:
 a36:	d9 df       	rcall	.-78     	; 0x9ea <__fp_splitA>
 a38:	c8 f3       	brcs	.-14     	; 0xa2c <__fp_szero+0xc>
 a3a:	99 23       	and	r25, r25
 a3c:	d1 f3       	breq	.-12     	; 0xa32 <__fp_szero+0x12>
 a3e:	c6 f3       	brts	.-16     	; 0xa30 <__fp_szero+0x10>
 a40:	df 93       	push	r29
 a42:	cf 93       	push	r28
 a44:	1f 93       	push	r17
 a46:	0f 93       	push	r16
 a48:	ff 92       	push	r15
 a4a:	c9 2f       	mov	r28, r25
 a4c:	dd 27       	eor	r29, r29
 a4e:	88 23       	and	r24, r24
 a50:	2a f0       	brmi	.+10     	; 0xa5c <log+0x26>
 a52:	21 97       	sbiw	r28, 0x01	; 1
 a54:	66 0f       	add	r22, r22
 a56:	77 1f       	adc	r23, r23
 a58:	88 1f       	adc	r24, r24
 a5a:	da f7       	brpl	.-10     	; 0xa52 <log+0x1c>
 a5c:	20 e0       	ldi	r18, 0x00	; 0
 a5e:	30 e0       	ldi	r19, 0x00	; 0
 a60:	40 e8       	ldi	r20, 0x80	; 128
 a62:	5f eb       	ldi	r21, 0xBF	; 191
 a64:	9f e3       	ldi	r25, 0x3F	; 63
 a66:	88 39       	cpi	r24, 0x98	; 152
 a68:	20 f0       	brcs	.+8      	; 0xa72 <log+0x3c>
 a6a:	80 3e       	cpi	r24, 0xE0	; 224
 a6c:	30 f0       	brcs	.+12     	; 0xa7a <log+0x44>
 a6e:	21 96       	adiw	r28, 0x01	; 1
 a70:	8f 77       	andi	r24, 0x7F	; 127
 a72:	51 de       	rcall	.-862    	; 0x716 <__addsf3>
 a74:	e2 ed       	ldi	r30, 0xD2	; 210
 a76:	f0 e0       	ldi	r31, 0x00	; 0
 a78:	03 c0       	rjmp	.+6      	; 0xa80 <log+0x4a>
 a7a:	4d de       	rcall	.-870    	; 0x716 <__addsf3>
 a7c:	ef ef       	ldi	r30, 0xFF	; 255
 a7e:	f0 e0       	ldi	r31, 0x00	; 0
 a80:	8b d0       	rcall	.+278    	; 0xb98 <__fp_powser>
 a82:	8b 01       	movw	r16, r22
 a84:	be 01       	movw	r22, r28
 a86:	ec 01       	movw	r28, r24
 a88:	fb 2e       	mov	r15, r27
 a8a:	6f 57       	subi	r22, 0x7F	; 127
 a8c:	71 09       	sbc	r23, r1
 a8e:	75 95       	asr	r23
 a90:	77 1f       	adc	r23, r23
 a92:	88 0b       	sbc	r24, r24
 a94:	99 0b       	sbc	r25, r25
 a96:	3e df       	rcall	.-388    	; 0x914 <__floatsisf>
 a98:	28 e1       	ldi	r18, 0x18	; 24
 a9a:	32 e7       	ldi	r19, 0x72	; 114
 a9c:	41 e3       	ldi	r20, 0x31	; 49
 a9e:	5f e3       	ldi	r21, 0x3F	; 63
 aa0:	16 d0       	rcall	.+44     	; 0xace <__mulsf3x>
 aa2:	af 2d       	mov	r26, r15
 aa4:	98 01       	movw	r18, r16
 aa6:	ae 01       	movw	r20, r28
 aa8:	ff 90       	pop	r15
 aaa:	0f 91       	pop	r16
 aac:	1f 91       	pop	r17
 aae:	cf 91       	pop	r28
 ab0:	df 91       	pop	r29
 ab2:	42 de       	rcall	.-892    	; 0x738 <__addsf3x>
 ab4:	81 cf       	rjmp	.-254    	; 0x9b8 <__fp_round>

00000ab6 <__mulsf3>:
 ab6:	0b d0       	rcall	.+22     	; 0xace <__mulsf3x>
 ab8:	7f cf       	rjmp	.-258    	; 0x9b8 <__fp_round>
 aba:	70 df       	rcall	.-288    	; 0x99c <__fp_pscA>
 abc:	28 f0       	brcs	.+10     	; 0xac8 <__mulsf3+0x12>
 abe:	75 df       	rcall	.-278    	; 0x9aa <__fp_pscB>
 ac0:	18 f0       	brcs	.+6      	; 0xac8 <__mulsf3+0x12>
 ac2:	95 23       	and	r25, r21
 ac4:	09 f0       	breq	.+2      	; 0xac8 <__mulsf3+0x12>
 ac6:	61 cf       	rjmp	.-318    	; 0x98a <__fp_inf>
 ac8:	66 cf       	rjmp	.-308    	; 0x996 <__fp_nan>
 aca:	11 24       	eor	r1, r1
 acc:	a9 cf       	rjmp	.-174    	; 0xa20 <__fp_szero>

00000ace <__mulsf3x>:
 ace:	85 df       	rcall	.-246    	; 0x9da <__fp_split3>
 ad0:	a0 f3       	brcs	.-24     	; 0xaba <__mulsf3+0x4>

00000ad2 <__mulsf3_pse>:
 ad2:	95 9f       	mul	r25, r21
 ad4:	d1 f3       	breq	.-12     	; 0xaca <__mulsf3+0x14>
 ad6:	95 0f       	add	r25, r21
 ad8:	50 e0       	ldi	r21, 0x00	; 0
 ada:	55 1f       	adc	r21, r21
 adc:	62 9f       	mul	r22, r18
 ade:	f0 01       	movw	r30, r0
 ae0:	72 9f       	mul	r23, r18
 ae2:	bb 27       	eor	r27, r27
 ae4:	f0 0d       	add	r31, r0
 ae6:	b1 1d       	adc	r27, r1
 ae8:	63 9f       	mul	r22, r19
 aea:	aa 27       	eor	r26, r26
 aec:	f0 0d       	add	r31, r0
 aee:	b1 1d       	adc	r27, r1
 af0:	aa 1f       	adc	r26, r26
 af2:	64 9f       	mul	r22, r20
 af4:	66 27       	eor	r22, r22
 af6:	b0 0d       	add	r27, r0
 af8:	a1 1d       	adc	r26, r1
 afa:	66 1f       	adc	r22, r22
 afc:	82 9f       	mul	r24, r18
 afe:	22 27       	eor	r18, r18
 b00:	b0 0d       	add	r27, r0
 b02:	a1 1d       	adc	r26, r1
 b04:	62 1f       	adc	r22, r18
 b06:	73 9f       	mul	r23, r19
 b08:	b0 0d       	add	r27, r0
 b0a:	a1 1d       	adc	r26, r1
 b0c:	62 1f       	adc	r22, r18
 b0e:	83 9f       	mul	r24, r19
 b10:	a0 0d       	add	r26, r0
 b12:	61 1d       	adc	r22, r1
 b14:	22 1f       	adc	r18, r18
 b16:	74 9f       	mul	r23, r20
 b18:	33 27       	eor	r19, r19
 b1a:	a0 0d       	add	r26, r0
 b1c:	61 1d       	adc	r22, r1
 b1e:	23 1f       	adc	r18, r19
 b20:	84 9f       	mul	r24, r20
 b22:	60 0d       	add	r22, r0
 b24:	21 1d       	adc	r18, r1
 b26:	82 2f       	mov	r24, r18
 b28:	76 2f       	mov	r23, r22
 b2a:	6a 2f       	mov	r22, r26
 b2c:	11 24       	eor	r1, r1
 b2e:	9f 57       	subi	r25, 0x7F	; 127
 b30:	50 40       	sbci	r21, 0x00	; 0
 b32:	8a f0       	brmi	.+34     	; 0xb56 <__mulsf3_pse+0x84>
 b34:	e1 f0       	breq	.+56     	; 0xb6e <__mulsf3_pse+0x9c>
 b36:	88 23       	and	r24, r24
 b38:	4a f0       	brmi	.+18     	; 0xb4c <__mulsf3_pse+0x7a>
 b3a:	ee 0f       	add	r30, r30
 b3c:	ff 1f       	adc	r31, r31
 b3e:	bb 1f       	adc	r27, r27
 b40:	66 1f       	adc	r22, r22
 b42:	77 1f       	adc	r23, r23
 b44:	88 1f       	adc	r24, r24
 b46:	91 50       	subi	r25, 0x01	; 1
 b48:	50 40       	sbci	r21, 0x00	; 0
 b4a:	a9 f7       	brne	.-22     	; 0xb36 <__mulsf3_pse+0x64>
 b4c:	9e 3f       	cpi	r25, 0xFE	; 254
 b4e:	51 05       	cpc	r21, r1
 b50:	70 f0       	brcs	.+28     	; 0xb6e <__mulsf3_pse+0x9c>
 b52:	1b cf       	rjmp	.-458    	; 0x98a <__fp_inf>
 b54:	65 cf       	rjmp	.-310    	; 0xa20 <__fp_szero>
 b56:	5f 3f       	cpi	r21, 0xFF	; 255
 b58:	ec f3       	brlt	.-6      	; 0xb54 <__mulsf3_pse+0x82>
 b5a:	98 3e       	cpi	r25, 0xE8	; 232
 b5c:	dc f3       	brlt	.-10     	; 0xb54 <__mulsf3_pse+0x82>
 b5e:	86 95       	lsr	r24
 b60:	77 95       	ror	r23
 b62:	67 95       	ror	r22
 b64:	b7 95       	ror	r27
 b66:	f7 95       	ror	r31
 b68:	e7 95       	ror	r30
 b6a:	9f 5f       	subi	r25, 0xFF	; 255
 b6c:	c1 f7       	brne	.-16     	; 0xb5e <__mulsf3_pse+0x8c>
 b6e:	fe 2b       	or	r31, r30
 b70:	88 0f       	add	r24, r24
 b72:	91 1d       	adc	r25, r1
 b74:	96 95       	lsr	r25
 b76:	87 95       	ror	r24
 b78:	97 f9       	bld	r25, 7
 b7a:	08 95       	ret

00000b7c <__fp_mpack>:
 b7c:	9f 3f       	cpi	r25, 0xFF	; 255
 b7e:	31 f0       	breq	.+12     	; 0xb8c <__fp_mpack_finite+0xc>

00000b80 <__fp_mpack_finite>:
 b80:	91 50       	subi	r25, 0x01	; 1
 b82:	20 f4       	brcc	.+8      	; 0xb8c <__fp_mpack_finite+0xc>
 b84:	87 95       	ror	r24
 b86:	77 95       	ror	r23
 b88:	67 95       	ror	r22
 b8a:	b7 95       	ror	r27
 b8c:	88 0f       	add	r24, r24
 b8e:	91 1d       	adc	r25, r1
 b90:	96 95       	lsr	r25
 b92:	87 95       	ror	r24
 b94:	97 f9       	bld	r25, 7
 b96:	08 95       	ret

00000b98 <__fp_powser>:
 b98:	df 93       	push	r29
 b9a:	cf 93       	push	r28
 b9c:	1f 93       	push	r17
 b9e:	0f 93       	push	r16
 ba0:	ff 92       	push	r15
 ba2:	ef 92       	push	r14
 ba4:	df 92       	push	r13
 ba6:	7b 01       	movw	r14, r22
 ba8:	8c 01       	movw	r16, r24
 baa:	68 94       	set
 bac:	05 c0       	rjmp	.+10     	; 0xbb8 <__fp_powser+0x20>
 bae:	da 2e       	mov	r13, r26
 bb0:	ef 01       	movw	r28, r30
 bb2:	8d df       	rcall	.-230    	; 0xace <__mulsf3x>
 bb4:	fe 01       	movw	r30, r28
 bb6:	e8 94       	clt
 bb8:	a5 91       	lpm	r26, Z+
 bba:	25 91       	lpm	r18, Z+
 bbc:	35 91       	lpm	r19, Z+
 bbe:	45 91       	lpm	r20, Z+
 bc0:	55 91       	lpm	r21, Z+
 bc2:	ae f3       	brts	.-22     	; 0xbae <__fp_powser+0x16>
 bc4:	ef 01       	movw	r28, r30
 bc6:	b8 dd       	rcall	.-1168   	; 0x738 <__addsf3x>
 bc8:	fe 01       	movw	r30, r28
 bca:	97 01       	movw	r18, r14
 bcc:	a8 01       	movw	r20, r16
 bce:	da 94       	dec	r13
 bd0:	79 f7       	brne	.-34     	; 0xbb0 <__fp_powser+0x18>
 bd2:	df 90       	pop	r13
 bd4:	ef 90       	pop	r14
 bd6:	ff 90       	pop	r15
 bd8:	0f 91       	pop	r16
 bda:	1f 91       	pop	r17
 bdc:	cf 91       	pop	r28
 bde:	df 91       	pop	r29
 be0:	08 95       	ret

00000be2 <__tablejump2__>:
 be2:	ee 0f       	add	r30, r30
 be4:	ff 1f       	adc	r31, r31
 be6:	05 90       	lpm	r0, Z+
 be8:	f4 91       	lpm	r31, Z
 bea:	e0 2d       	mov	r30, r0
 bec:	09 94       	ijmp

00000bee <__itoa_ncheck>:
 bee:	bb 27       	eor	r27, r27
 bf0:	4a 30       	cpi	r20, 0x0A	; 10
 bf2:	31 f4       	brne	.+12     	; 0xc00 <__itoa_ncheck+0x12>
 bf4:	99 23       	and	r25, r25
 bf6:	22 f4       	brpl	.+8      	; 0xc00 <__itoa_ncheck+0x12>
 bf8:	bd e2       	ldi	r27, 0x2D	; 45
 bfa:	90 95       	com	r25
 bfc:	81 95       	neg	r24
 bfe:	9f 4f       	sbci	r25, 0xFF	; 255
 c00:	01 c0       	rjmp	.+2      	; 0xc04 <__utoa_common>

00000c02 <__utoa_ncheck>:
 c02:	bb 27       	eor	r27, r27

00000c04 <__utoa_common>:
 c04:	fb 01       	movw	r30, r22
 c06:	55 27       	eor	r21, r21
 c08:	aa 27       	eor	r26, r26
 c0a:	88 0f       	add	r24, r24
 c0c:	99 1f       	adc	r25, r25
 c0e:	aa 1f       	adc	r26, r26
 c10:	a4 17       	cp	r26, r20
 c12:	10 f0       	brcs	.+4      	; 0xc18 <__utoa_common+0x14>
 c14:	a4 1b       	sub	r26, r20
 c16:	83 95       	inc	r24
 c18:	50 51       	subi	r21, 0x10	; 16
 c1a:	b9 f7       	brne	.-18     	; 0xc0a <__utoa_common+0x6>
 c1c:	a0 5d       	subi	r26, 0xD0	; 208
 c1e:	aa 33       	cpi	r26, 0x3A	; 58
 c20:	08 f0       	brcs	.+2      	; 0xc24 <__utoa_common+0x20>
 c22:	a9 5d       	subi	r26, 0xD9	; 217
 c24:	a1 93       	st	Z+, r26
 c26:	00 97       	sbiw	r24, 0x00	; 0
 c28:	79 f7       	brne	.-34     	; 0xc08 <__utoa_common+0x4>
 c2a:	b1 11       	cpse	r27, r1
 c2c:	b1 93       	st	Z+, r27
 c2e:	11 92       	st	Z+, r1
 c30:	cb 01       	movw	r24, r22
 c32:	00 c0       	rjmp	.+0      	; 0xc34 <strrev>

00000c34 <strrev>:
 c34:	dc 01       	movw	r26, r24
 c36:	fc 01       	movw	r30, r24
 c38:	67 2f       	mov	r22, r23
 c3a:	71 91       	ld	r23, Z+
 c3c:	77 23       	and	r23, r23
 c3e:	e1 f7       	brne	.-8      	; 0xc38 <strrev+0x4>
 c40:	32 97       	sbiw	r30, 0x02	; 2
 c42:	04 c0       	rjmp	.+8      	; 0xc4c <strrev+0x18>
 c44:	7c 91       	ld	r23, X
 c46:	6d 93       	st	X+, r22
 c48:	70 83       	st	Z, r23
 c4a:	62 91       	ld	r22, -Z
 c4c:	ae 17       	cp	r26, r30
 c4e:	bf 07       	cpc	r27, r31
 c50:	c8 f3       	brcs	.-14     	; 0xc44 <strrev+0x10>
 c52:	08 95       	ret

00000c54 <_exit>:
 c54:	f8 94       	cli

00000c56 <__stop_program>:
 c56:	ff cf       	rjmp	.-2      	; 0xc56 <__stop_program>
