
project3_part1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001fe  00800100  000009dc  00000a70  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000009dc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001a  008002fe  008002fe  00000c6e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000c6e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ca0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000090  00000000  00000000  00000ce0  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000eea  00000000  00000000  00000d70  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007ce  00000000  00000000  00001c5a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000821  00000000  00000000  00002428  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000104  00000000  00000000  00002c4c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000358c  00000000  00000000  00002d50  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000173  00000000  00000000  000062dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  0000644f  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00000305  00000000  00000000  000064af  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	60 c0       	rjmp	.+192    	; 0xc2 <__ctors_end>
   2:	00 00       	nop
   4:	79 c0       	rjmp	.+242    	; 0xf8 <__bad_interrupt>
   6:	00 00       	nop
   8:	77 c0       	rjmp	.+238    	; 0xf8 <__bad_interrupt>
   a:	00 00       	nop
   c:	75 c0       	rjmp	.+234    	; 0xf8 <__bad_interrupt>
   e:	00 00       	nop
  10:	73 c0       	rjmp	.+230    	; 0xf8 <__bad_interrupt>
  12:	00 00       	nop
  14:	71 c0       	rjmp	.+226    	; 0xf8 <__bad_interrupt>
  16:	00 00       	nop
  18:	6f c0       	rjmp	.+222    	; 0xf8 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	6d c0       	rjmp	.+218    	; 0xf8 <__bad_interrupt>
  1e:	00 00       	nop
  20:	6b c0       	rjmp	.+214    	; 0xf8 <__bad_interrupt>
  22:	00 00       	nop
  24:	69 c0       	rjmp	.+210    	; 0xf8 <__bad_interrupt>
  26:	00 00       	nop
  28:	67 c0       	rjmp	.+206    	; 0xf8 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	65 c0       	rjmp	.+202    	; 0xf8 <__bad_interrupt>
  2e:	00 00       	nop
  30:	63 c0       	rjmp	.+198    	; 0xf8 <__bad_interrupt>
  32:	00 00       	nop
  34:	61 c0       	rjmp	.+194    	; 0xf8 <__bad_interrupt>
  36:	00 00       	nop
  38:	5f c0       	rjmp	.+190    	; 0xf8 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	5d c0       	rjmp	.+186    	; 0xf8 <__bad_interrupt>
  3e:	00 00       	nop
  40:	5b c0       	rjmp	.+182    	; 0xf8 <__bad_interrupt>
  42:	00 00       	nop
  44:	59 c0       	rjmp	.+178    	; 0xf8 <__bad_interrupt>
  46:	00 00       	nop
  48:	57 c0       	rjmp	.+174    	; 0xf8 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	55 c0       	rjmp	.+170    	; 0xf8 <__bad_interrupt>
  4e:	00 00       	nop
  50:	53 c0       	rjmp	.+166    	; 0xf8 <__bad_interrupt>
  52:	00 00       	nop
  54:	51 c0       	rjmp	.+162    	; 0xf8 <__bad_interrupt>
  56:	00 00       	nop
  58:	4f c0       	rjmp	.+158    	; 0xf8 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	4d c0       	rjmp	.+154    	; 0xf8 <__bad_interrupt>
  5e:	00 00       	nop
  60:	4b c0       	rjmp	.+150    	; 0xf8 <__bad_interrupt>
  62:	00 00       	nop
  64:	49 c0       	rjmp	.+146    	; 0xf8 <__bad_interrupt>
  66:	00 00       	nop
  68:	08 00       	.word	0x0008	; ????
  6a:	00 00       	nop
  6c:	be 92       	st	-X, r11
  6e:	24 49       	sbci	r18, 0x94	; 148
  70:	12 3e       	cpi	r17, 0xE2	; 226
  72:	ab aa       	std	Y+51, r10	; 0x33
  74:	aa 2a       	or	r10, r26
  76:	be cd       	rjmp	.-1156   	; 0xfffffbf4 <__eeprom_end+0xff7efbf4>
  78:	cc cc       	rjmp	.-1640   	; 0xfffffa12 <__eeprom_end+0xff7efa12>
  7a:	4c 3e       	cpi	r20, 0xEC	; 236
  7c:	00 00       	nop
  7e:	00 80       	ld	r0, Z
  80:	be ab       	std	Y+54, r27	; 0x36
  82:	aa aa       	std	Y+50, r10	; 0x32
  84:	aa 3e       	cpi	r26, 0xEA	; 234
  86:	00 00       	nop
  88:	00 00       	nop
  8a:	bf 00       	.word	0x00bf	; ????
  8c:	00 00       	nop
  8e:	80 3f       	cpi	r24, 0xF0	; 240
  90:	00 00       	nop
  92:	00 00       	nop
  94:	00 08       	sbc	r0, r0
  96:	41 78       	andi	r20, 0x81	; 129
  98:	d3 bb       	out	0x13, r29	; 19
  9a:	43 87       	std	Z+11, r20	; 0x0b
  9c:	d1 13       	cpse	r29, r17
  9e:	3d 19       	sub	r19, r13
  a0:	0e 3c       	cpi	r16, 0xCE	; 206
  a2:	c3 bd       	out	0x23, r28	; 35
  a4:	42 82       	std	Z+2, r4	; 0x02
  a6:	ad 2b       	or	r26, r29
  a8:	3e 68       	ori	r19, 0x8E	; 142
  aa:	ec 82       	std	Y+4, r14	; 0x04
  ac:	76 be       	out	0x36, r7	; 54
  ae:	d9 8f       	std	Y+25, r29	; 0x19
  b0:	e1 a9       	ldd	r30, Z+49	; 0x31
  b2:	3e 4c       	sbci	r19, 0xCE	; 206
  b4:	80 ef       	ldi	r24, 0xF0	; 240
  b6:	ff be       	out	0x3f, r15	; 63
  b8:	01 c4       	rjmp	.+2050   	; 0x8bc <__mulsf3_pse+0x5a>
  ba:	ff 7f       	andi	r31, 0xFF	; 255
  bc:	3f 00       	.word	0x003f	; ????
  be:	00 00       	nop
	...

000000c2 <__ctors_end>:
  c2:	11 24       	eor	r1, r1
  c4:	1f be       	out	0x3f, r1	; 63
  c6:	cf ef       	ldi	r28, 0xFF	; 255
  c8:	d8 e0       	ldi	r29, 0x08	; 8
  ca:	de bf       	out	0x3e, r29	; 62
  cc:	cd bf       	out	0x3d, r28	; 61

000000ce <__do_copy_data>:
  ce:	12 e0       	ldi	r17, 0x02	; 2
  d0:	a0 e0       	ldi	r26, 0x00	; 0
  d2:	b1 e0       	ldi	r27, 0x01	; 1
  d4:	ec ed       	ldi	r30, 0xDC	; 220
  d6:	f9 e0       	ldi	r31, 0x09	; 9
  d8:	02 c0       	rjmp	.+4      	; 0xde <__do_copy_data+0x10>
  da:	05 90       	lpm	r0, Z+
  dc:	0d 92       	st	X+, r0
  de:	ae 3f       	cpi	r26, 0xFE	; 254
  e0:	b1 07       	cpc	r27, r17
  e2:	d9 f7       	brne	.-10     	; 0xda <__do_copy_data+0xc>

000000e4 <__do_clear_bss>:
  e4:	23 e0       	ldi	r18, 0x03	; 3
  e6:	ae ef       	ldi	r26, 0xFE	; 254
  e8:	b2 e0       	ldi	r27, 0x02	; 2
  ea:	01 c0       	rjmp	.+2      	; 0xee <.do_clear_bss_start>

000000ec <.do_clear_bss_loop>:
  ec:	1d 92       	st	X+, r1

000000ee <.do_clear_bss_start>:
  ee:	a8 31       	cpi	r26, 0x18	; 24
  f0:	b2 07       	cpc	r27, r18
  f2:	e1 f7       	brne	.-8      	; 0xec <.do_clear_bss_loop>
  f4:	d3 d1       	rcall	.+934    	; 0x49c <main>
  f6:	70 c4       	rjmp	.+2272   	; 0x9d8 <_exit>

000000f8 <__bad_interrupt>:
  f8:	83 cf       	rjmp	.-250    	; 0x0 <__vectors>

000000fa <Mega328P_Init>:
  fa:	07 e0       	ldi	r16, 0x07	; 7
  fc:	04 b9       	out	0x04, r16	; 4
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	05 b9       	out	0x05, r16	; 5
 102:	01 b9       	out	0x01, r16	; 1
 104:	10 e0       	ldi	r17, 0x00	; 0
 106:	07 e6       	ldi	r16, 0x67	; 103
 108:	10 93 c5 00 	sts	0x00C5, r17	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 10c:	00 93 c4 00 	sts	0x00C4, r16	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 110:	08 e1       	ldi	r16, 0x18	; 24
 112:	00 93 c1 00 	sts	0x00C1, r16	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 116:	06 e0       	ldi	r16, 0x06	; 6
 118:	00 93 c2 00 	sts	0x00C2, r16	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 11c:	07 e8       	ldi	r16, 0x87	; 135
 11e:	00 93 7a 00 	sts	0x007A, r16	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
 122:	00 e4       	ldi	r16, 0x40	; 64
 124:	00 93 7c 00 	sts	0x007C, r16	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
 128:	00 e0       	ldi	r16, 0x00	; 0
 12a:	00 93 7b 00 	sts	0x007B, r16	; 0x80007b <__TEXT_REGION_LENGTH__+0x7e007b>
 12e:	0e ef       	ldi	r16, 0xFE	; 254
 130:	00 93 7e 00 	sts	0x007E, r16	; 0x80007e <__TEXT_REGION_LENGTH__+0x7e007e>
 134:	0f ef       	ldi	r16, 0xFF	; 255
 136:	00 93 7f 00 	sts	0x007F, r16	; 0x80007f <__TEXT_REGION_LENGTH__+0x7e007f>
 13a:	08 95       	ret

0000013c <LCD_Write_Command>:
 13c:	31 d0       	rcall	.+98     	; 0x1a0 <UART_Off>
 13e:	0f ef       	ldi	r16, 0xFF	; 255
 140:	0a b9       	out	0x0a, r16	; 10
 142:	00 91 03 03 	lds	r16, 0x0303	; 0x800303 <DATA>
 146:	0b b9       	out	0x0b, r16	; 11
 148:	04 e0       	ldi	r16, 0x04	; 4
 14a:	05 b9       	out	0x05, r16	; 5
 14c:	04 d0       	rcall	.+8      	; 0x156 <LCD_Delay>
 14e:	00 e0       	ldi	r16, 0x00	; 0
 150:	05 b9       	out	0x05, r16	; 5
 152:	01 d0       	rcall	.+2      	; 0x156 <LCD_Delay>
 154:	1f c0       	rjmp	.+62     	; 0x194 <UART_On>

00000156 <LCD_Delay>:
 156:	0a ef       	ldi	r16, 0xFA	; 250

00000158 <D0>:
 158:	1f ef       	ldi	r17, 0xFF	; 255

0000015a <D1>:
 15a:	1a 95       	dec	r17
 15c:	f1 f7       	brne	.-4      	; 0x15a <D1>
 15e:	0a 95       	dec	r16
 160:	d9 f7       	brne	.-10     	; 0x158 <D0>
 162:	08 95       	ret

00000164 <LCD_Write_Data>:
 164:	1d d0       	rcall	.+58     	; 0x1a0 <UART_Off>
 166:	0f ef       	ldi	r16, 0xFF	; 255
 168:	0a b9       	out	0x0a, r16	; 10
 16a:	00 91 03 03 	lds	r16, 0x0303	; 0x800303 <DATA>
 16e:	0b b9       	out	0x0b, r16	; 11
 170:	06 e0       	ldi	r16, 0x06	; 6
 172:	05 b9       	out	0x05, r16	; 5
 174:	f0 df       	rcall	.-32     	; 0x156 <LCD_Delay>
 176:	00 e0       	ldi	r16, 0x00	; 0
 178:	05 b9       	out	0x05, r16	; 5
 17a:	ed df       	rcall	.-38     	; 0x156 <LCD_Delay>
 17c:	0b c0       	rjmp	.+22     	; 0x194 <UART_On>
 17e:	08 95       	ret

00000180 <LCD_Read_Data>:
 180:	0f d0       	rcall	.+30     	; 0x1a0 <UART_Off>
 182:	00 e0       	ldi	r16, 0x00	; 0
 184:	0a b9       	out	0x0a, r16	; 10
 186:	45 b8       	out	0x05, r4	; 5
 188:	0b b1       	in	r16, 0x0b	; 11
 18a:	00 93 03 03 	sts	0x0303, r16	; 0x800303 <DATA>
 18e:	05 b8       	out	0x05, r0	; 5
 190:	01 c0       	rjmp	.+2      	; 0x194 <UART_On>
 192:	08 95       	ret

00000194 <UART_On>:
 194:	02 e0       	ldi	r16, 0x02	; 2
 196:	0a b9       	out	0x0a, r16	; 10
 198:	08 e1       	ldi	r16, 0x18	; 24
 19a:	00 93 c1 00 	sts	0x00C1, r16	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 19e:	08 95       	ret

000001a0 <UART_Off>:
 1a0:	00 e0       	ldi	r16, 0x00	; 0
 1a2:	00 93 c1 00 	sts	0x00C1, r16	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 1a6:	08 95       	ret

000001a8 <UART_Clear>:
 1a8:	00 91 c0 00 	lds	r16, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
 1ac:	07 ff       	sbrs	r16, 7
 1ae:	08 95       	ret
 1b0:	00 91 c6 00 	lds	r16, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 1b4:	f9 cf       	rjmp	.-14     	; 0x1a8 <UART_Clear>

000001b6 <UART_Get>:
 1b6:	00 91 c0 00 	lds	r16, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
 1ba:	07 ff       	sbrs	r16, 7
 1bc:	fc cf       	rjmp	.-8      	; 0x1b6 <UART_Get>
 1be:	00 91 c6 00 	lds	r16, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 1c2:	00 93 07 03 	sts	0x0307, r16	; 0x800307 <ASCII>
 1c6:	08 95       	ret

000001c8 <UART_Put>:
 1c8:	10 91 c0 00 	lds	r17, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
 1cc:	15 ff       	sbrs	r17, 5
 1ce:	fc cf       	rjmp	.-8      	; 0x1c8 <UART_Put>
 1d0:	00 91 07 03 	lds	r16, 0x0307	; 0x800307 <ASCII>
 1d4:	00 93 c6 00 	sts	0x00C6, r16	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 1d8:	08 95       	ret

000001da <ADC_Get>:
 1da:	07 ec       	ldi	r16, 0xC7	; 199
 1dc:	00 93 7a 00 	sts	0x007A, r16	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>

000001e0 <A2V1>:
 1e0:	00 91 7a 00 	lds	r16, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
 1e4:	06 fd       	sbrc	r16, 6
 1e6:	fc cf       	rjmp	.-8      	; 0x1e0 <A2V1>
 1e8:	00 91 78 00 	lds	r16, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 1ec:	00 93 15 03 	sts	0x0315, r16	; 0x800315 <LADC>
 1f0:	00 91 79 00 	lds	r16, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 1f4:	00 93 04 03 	sts	0x0304, r16	; 0x800304 <HADC>
 1f8:	08 95       	ret

000001fa <EEPROM_Write>:
 1fa:	f9 99       	sbic	0x1f, 1	; 31
 1fc:	fe cf       	rjmp	.-4      	; 0x1fa <EEPROM_Write>
 1fe:	20 91 05 03 	lds	r18, 0x0305	; 0x800305 <hAddress>
 202:	10 91 06 03 	lds	r17, 0x0306	; 0x800306 <lAddress>
 206:	00 91 02 03 	lds	r16, 0x0302	; 0x800302 <content>
 20a:	22 bd       	out	0x22, r18	; 34
 20c:	11 bd       	out	0x21, r17	; 33
 20e:	00 bd       	out	0x20, r16	; 32
 210:	fa 9a       	sbi	0x1f, 2	; 31
 212:	f9 9a       	sbi	0x1f, 1	; 31
 214:	08 95       	ret

00000216 <EEPROM_Read>:
 216:	f9 99       	sbic	0x1f, 1	; 31
 218:	fe cf       	rjmp	.-4      	; 0x216 <EEPROM_Read>
 21a:	20 91 05 03 	lds	r18, 0x0305	; 0x800305 <hAddress>
 21e:	10 91 06 03 	lds	r17, 0x0306	; 0x800306 <lAddress>
 222:	00 e0       	ldi	r16, 0x00	; 0
 224:	22 bd       	out	0x22, r18	; 34
 226:	11 bd       	out	0x21, r17	; 33
 228:	f8 9a       	sbi	0x1f, 0	; 31
 22a:	00 b5       	in	r16, 0x20	; 32
 22c:	00 93 07 03 	sts	0x0307, r16	; 0x800307 <ASCII>
 230:	08 95       	ret

00000232 <UART_Puts>:
 232:	cf 93       	push	r28
{
	DATA = 0x18;						                // command to scroll the text on LCD
	LCD_Write_Command();				            // send the command to the LCD
  UART_Puts("Team name is scrolling.");	  // place space into terminal
  LCD_Write_Command();		                // send the command to the LCD
  LCD_Write_Data();
 234:	df 93       	push	r29
 236:	ec 01       	movw	r28, r24
 238:	98 81       	ld	r25, Y
 23a:	99 23       	and	r25, r25
 23c:	39 f0       	breq	.+14     	; 0x24c <UART_Puts+0x1a>
 23e:	21 96       	adiw	r28, 0x01	; 1
 240:	90 93 07 03 	sts	0x0307, r25	; 0x800307 <ASCII>
 244:	c1 df       	rcall	.-126    	; 0x1c8 <UART_Put>
 246:	99 91       	ld	r25, Y+
 248:	91 11       	cpse	r25, r1
 24a:	fa cf       	rjmp	.-12     	; 0x240 <UART_Puts+0xe>
 24c:	df 91       	pop	r29
 24e:	cf 91       	pop	r28
 250:	08 95       	ret

00000252 <LCD_Puts>:
 252:	cf 93       	push	r28
 254:	df 93       	push	r29
 256:	ec 01       	movw	r28, r24
 258:	98 81       	ld	r25, Y
 25a:	99 23       	and	r25, r25
 25c:	39 f0       	breq	.+14     	; 0x26c <LCD_Puts+0x1a>
 25e:	21 96       	adiw	r28, 0x01	; 1
 260:	90 93 03 03 	sts	0x0303, r25	; 0x800303 <DATA>
 264:	7f df       	rcall	.-258    	; 0x164 <LCD_Write_Data>
 266:	99 91       	ld	r25, Y+
 268:	91 11       	cpse	r25, r1
 26a:	fa cf       	rjmp	.-12     	; 0x260 <LCD_Puts+0xe>
 26c:	df 91       	pop	r29
 26e:	cf 91       	pop	r28
 270:	08 95       	ret

00000272 <Banner>:
 272:	81 ee       	ldi	r24, 0xE1	; 225
 274:	92 e0       	ldi	r25, 0x02	; 2
 276:	dd df       	rcall	.-70     	; 0x232 <UART_Puts>
 278:	8a ea       	ldi	r24, 0xAA	; 170
 27a:	92 e0       	ldi	r25, 0x02	; 2
 27c:	da df       	rcall	.-76     	; 0x232 <UART_Puts>
 27e:	8f e7       	ldi	r24, 0x7F	; 127
 280:	92 e0       	ldi	r25, 0x02	; 2
 282:	d7 cf       	rjmp	.-82     	; 0x232 <UART_Puts>
 284:	08 95       	ret

00000286 <HELP>:
 286:	89 e8       	ldi	r24, 0x89	; 137
 288:	92 e0       	ldi	r25, 0x02	; 2
 28a:	d3 cf       	rjmp	.-90     	; 0x232 <UART_Puts>
 28c:	08 95       	ret

0000028e <LCD>:
 28e:	84 e3       	ldi	r24, 0x34	; 52
 290:	80 93 03 03 	sts	0x0303, r24	; 0x800303 <DATA>
 294:	53 df       	rcall	.-346    	; 0x13c <LCD_Write_Command>
 296:	88 e0       	ldi	r24, 0x08	; 8
 298:	80 93 03 03 	sts	0x0303, r24	; 0x800303 <DATA>
 29c:	4f df       	rcall	.-354    	; 0x13c <LCD_Write_Command>
 29e:	82 e0       	ldi	r24, 0x02	; 2
 2a0:	80 93 03 03 	sts	0x0303, r24	; 0x800303 <DATA>
 2a4:	4b df       	rcall	.-362    	; 0x13c <LCD_Write_Command>
 2a6:	86 e0       	ldi	r24, 0x06	; 6
 2a8:	80 93 03 03 	sts	0x0303, r24	; 0x800303 <DATA>
 2ac:	47 df       	rcall	.-370    	; 0x13c <LCD_Write_Command>
 2ae:	8f e0       	ldi	r24, 0x0F	; 15
 2b0:	80 93 03 03 	sts	0x0303, r24	; 0x800303 <DATA>
 2b4:	43 df       	rcall	.-378    	; 0x13c <LCD_Write_Command>
 2b6:	8b e3       	ldi	r24, 0x3B	; 59
 2b8:	92 e0       	ldi	r25, 0x02	; 2
 2ba:	cb cf       	rjmp	.-106    	; 0x252 <LCD_Puts>
 2bc:	08 95       	ret

000002be <ADC>:

/**
*Lite Demo of the Analog to Digital Converter
*/
void ADC(void)
{
 2be:	8f 92       	push	r8
 2c0:	9f 92       	push	r9
 2c2:	af 92       	push	r10
 2c4:	bf 92       	push	r11
 2c6:	cf 92       	push	r12
 2c8:	df 92       	push	r13
 2ca:	ef 92       	push	r14
 2cc:	ff 92       	push	r15
  ASCII = '\0';
 2ce:	10 92 07 03 	sts	0x0307, r1	; 0x800307 <ASCII>
  while (ASCII != 'e' || ASCII != 'E') {
    ADC_Get();
 2d2:	83 df       	rcall	.-250    	; 0x1da <ADC_Get>

    Acc = (((int)HADC) * 0x100 + (int)(LADC)); // get 10 bit number
 2d4:	60 91 04 03 	lds	r22, 0x0304	; 0x800304 <HADC>
 2d8:	06 2e       	mov	r0, r22
 2da:	00 0c       	add	r0, r0
 2dc:	77 0b       	sbc	r23, r23
 2de:	76 2f       	mov	r23, r22
 2e0:	66 27       	eor	r22, r22
 2e2:	80 91 15 03 	lds	r24, 0x0315	; 0x800315 <LADC>
 2e6:	68 0f       	add	r22, r24
 2e8:	71 1d       	adc	r23, r1
 2ea:	87 fd       	sbrc	r24, 7
 2ec:	7a 95       	dec	r23
 2ee:	70 93 17 03 	sts	0x0317, r23	; 0x800317 <Acc+0x1>
 2f2:	60 93 16 03 	sts	0x0316, r22	; 0x800316 <Acc>

    r = 10000.0 * Acc / (1024.0 - Acc); // adapt the thermistor to ADC
 2f6:	07 2e       	mov	r0, r23
 2f8:	00 0c       	add	r0, r0
 2fa:	88 0b       	sbc	r24, r24
 2fc:	99 0b       	sbc	r25, r25
 2fe:	d2 d1       	rcall	.+932    	; 0x6a4 <__floatsisf>
 300:	6b 01       	movw	r12, r22
 302:	7c 01       	movw	r14, r24
 304:	20 e0       	ldi	r18, 0x00	; 0
 306:	30 e4       	ldi	r19, 0x40	; 64
 308:	4c e1       	ldi	r20, 0x1C	; 28
 30a:	56 e4       	ldi	r21, 0x46	; 70
 30c:	9c d2       	rcall	.+1336   	; 0x846 <__mulsf3>
 30e:	4b 01       	movw	r8, r22
 310:	5c 01       	movw	r10, r24
 312:	a7 01       	movw	r20, r14
 314:	96 01       	movw	r18, r12
 316:	60 e0       	ldi	r22, 0x00	; 0
 318:	70 e0       	ldi	r23, 0x00	; 0
 31a:	80 e8       	ldi	r24, 0x80	; 128
 31c:	94 e4       	ldi	r25, 0x44	; 68
 31e:	c2 d0       	rcall	.+388    	; 0x4a4 <__subsf3>
 320:	9b 01       	movw	r18, r22
 322:	ac 01       	movw	r20, r24
 324:	c5 01       	movw	r24, r10
 326:	b4 01       	movw	r22, r8
 328:	22 d1       	rcall	.+580    	; 0x56e <__divsf3>
 32a:	60 93 0c 03 	sts	0x030C, r22	; 0x80030c <r>
 32e:	70 93 0d 03 	sts	0x030D, r23	; 0x80030d <r+0x1>
 332:	80 93 0e 03 	sts	0x030E, r24	; 0x80030e <r+0x2>
 336:	90 93 0f 03 	sts	0x030F, r25	; 0x80030f <r+0x3>

    t = 3625 * 298.15 / (298.15*log(r / 10000) + 3950); // get temperature in Kelvin
 33a:	20 e0       	ldi	r18, 0x00	; 0
 33c:	30 e4       	ldi	r19, 0x40	; 64
 33e:	4c e1       	ldi	r20, 0x1C	; 28
 340:	56 e4       	ldi	r21, 0x46	; 70
 342:	15 d1       	rcall	.+554    	; 0x56e <__divsf3>
 344:	40 d2       	rcall	.+1152   	; 0x7c6 <log>
    t = t - 273.15; // convert to Celsius
    t = t * 9.0 / 5.0 + 32.0; // convert to Fahrenheit
 346:	23 e3       	ldi	r18, 0x33	; 51
 348:	33 e1       	ldi	r19, 0x13	; 19
 34a:	45 e9       	ldi	r20, 0x95	; 149
 34c:	53 e4       	ldi	r21, 0x43	; 67
 34e:	7b d2       	rcall	.+1270   	; 0x846 <__mulsf3>
 350:	20 e0       	ldi	r18, 0x00	; 0
 352:	30 ee       	ldi	r19, 0xE0	; 224
 354:	46 e7       	ldi	r20, 0x76	; 118
 356:	55 e4       	ldi	r21, 0x45	; 69
 358:	a6 d0       	rcall	.+332    	; 0x4a6 <__addsf3>
 35a:	9b 01       	movw	r18, r22
 35c:	ac 01       	movw	r20, r24
 35e:	6e ec       	ldi	r22, 0xCE	; 206
 360:	7e ee       	ldi	r23, 0xEE	; 238
 362:	83 e8       	ldi	r24, 0x83	; 131
 364:	99 e4       	ldi	r25, 0x49	; 73
 366:	03 d1       	rcall	.+518    	; 0x56e <__divsf3>
 368:	23 e3       	ldi	r18, 0x33	; 51
 36a:	33 e9       	ldi	r19, 0x93	; 147
 36c:	48 e8       	ldi	r20, 0x88	; 136
 36e:	53 e4       	ldi	r21, 0x43	; 67
 370:	99 d0       	rcall	.+306    	; 0x4a4 <__subsf3>
 372:	20 e0       	ldi	r18, 0x00	; 0
 374:	30 e0       	ldi	r19, 0x00	; 0
 376:	40 e1       	ldi	r20, 0x10	; 16
 378:	51 e4       	ldi	r21, 0x41	; 65
 37a:	65 d2       	rcall	.+1226   	; 0x846 <__mulsf3>
 37c:	20 e0       	ldi	r18, 0x00	; 0
 37e:	30 e0       	ldi	r19, 0x00	; 0
 380:	40 ea       	ldi	r20, 0xA0	; 160
 382:	50 e4       	ldi	r21, 0x40	; 64
 384:	f4 d0       	rcall	.+488    	; 0x56e <__divsf3>
 386:	20 e0       	ldi	r18, 0x00	; 0
 388:	30 e0       	ldi	r19, 0x00	; 0
 38a:	40 e0       	ldi	r20, 0x00	; 0
 38c:	52 e4       	ldi	r21, 0x42	; 66
 38e:	8b d0       	rcall	.+278    	; 0x4a6 <__addsf3>
 390:	60 93 fe 02 	sts	0x02FE, r22	; 0x8002fe <__data_end>
 394:	70 93 ff 02 	sts	0x02FF, r23	; 0x8002ff <__data_end+0x1>
 398:	80 93 00 03 	sts	0x0300, r24	; 0x800300 <__data_end+0x2>
 39c:	90 93 01 03 	sts	0x0301, r25	; 0x800301 <__data_end+0x3>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
 3a0:	4e d1       	rcall	.+668    	; 0x63e <__fixsfsi>
 3a2:	dc 01       	movw	r26, r24
 3a4:	cb 01       	movw	r24, r22
 3a6:	4a e0       	ldi	r20, 0x0A	; 10
 3a8:	68 e0       	ldi	r22, 0x08	; 8
 3aa:	73 e0       	ldi	r23, 0x03	; 3

    itoa((int)t, temperature, 10);

    UART_Puts("\r\n");
 3ac:	e2 d2       	rcall	.+1476   	; 0x972 <__itoa_ncheck>
 3ae:	88 e1       	ldi	r24, 0x18	; 24
 3b0:	91 e0       	ldi	r25, 0x01	; 1
 3b2:	3f df       	rcall	.-386    	; 0x232 <UART_Puts>
    UART_Puts(temperature);
 3b4:	88 e0       	ldi	r24, 0x08	; 8
 3b6:	93 e0       	ldi	r25, 0x03	; 3
 3b8:	3c df       	rcall	.-392    	; 0x232 <UART_Puts>
 3ba:	84 e5       	ldi	r24, 0x54	; 84
    UART_Puts(MS7);
 3bc:	92 e0       	ldi	r25, 0x02	; 2
 3be:	39 df       	rcall	.-398    	; 0x232 <UART_Puts>
 3c0:	8b e1       	ldi	r24, 0x1B	; 27
 3c2:	91 e0       	ldi	r25, 0x01	; 1
    UART_Puts("\033[2J");
 3c4:	36 df       	rcall	.-404    	; 0x232 <UART_Puts>
 3c6:	80 e2       	ldi	r24, 0x20	; 32
 3c8:	91 e0       	ldi	r25, 0x01	; 1
 3ca:	33 df       	rcall	.-410    	; 0x232 <UART_Puts>
    UART_Puts("\033[0;0H");
 3cc:	00 91 c6 00 	lds	r16, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 3d0:	00 93 07 03 	sts	0x0307, r16	; 0x800307 <ASCII>

    asm("lds r16,0xC6");
 3d4:	80 91 07 03 	lds	r24, 0x0307	; 0x800307 <ASCII>
    asm("sts ASCII,r16");
 3d8:	85 36       	cpi	r24, 0x65	; 101
 3da:	09 f0       	breq	.+2      	; 0x3de <ADC+0x120>

    if (ASCII == 'e') {
 3dc:	7a cf       	rjmp	.-268    	; 0x2d2 <ADC+0x14>
 3de:	ff 90       	pop	r15
 3e0:	ef 90       	pop	r14
 3e2:	df 90       	pop	r13
 3e4:	cf 90       	pop	r12
      return;
    }
  }
  
} // end ADC
 3e6:	bf 90       	pop	r11
 3e8:	af 90       	pop	r10
 3ea:	9f 90       	pop	r9
 3ec:	8f 90       	pop	r8
 3ee:	08 95       	ret

000003f0 <getEEPROMAddress>:
 3f0:	87 e2       	ldi	r24, 0x27	; 39
 3f2:	91 e0       	ldi	r25, 0x01	; 1
 3f4:	1e df       	rcall	.-452    	; 0x232 <UART_Puts>
 3f6:	df de       	rcall	.-578    	; 0x1b6 <UART_Get>
*gets high-bit and then low-bit from the user when prompted
*/
void getEEPROMAddress()
{
  UART_Puts("\nEnter the high-bit of the EEPROM Address: ");
  UART_Get();
 3f8:	80 91 07 03 	lds	r24, 0x0307	; 0x800307 <ASCII>
  hAddress = ASCII; // set high bit of EEPROM address --- r18 --- see Assembler1.s
 3fc:	80 93 05 03 	sts	0x0305, r24	; 0x800305 <hAddress>
 400:	83 e5       	ldi	r24, 0x53	; 83
  UART_Puts("Enter the low-bit of the EEPROM Address: ");
 402:	91 e0       	ldi	r25, 0x01	; 1
 404:	16 df       	rcall	.-468    	; 0x232 <UART_Puts>
  UART_Get();
 406:	d7 de       	rcall	.-594    	; 0x1b6 <UART_Get>
 408:	80 91 07 03 	lds	r24, 0x0307	; 0x800307 <ASCII>
  lAddress = ASCII; // set low bit EEPROM address --- r17 --- see Assembler1.s
 40c:	80 93 06 03 	sts	0x0306, r24	; 0x800306 <lAddress>
 410:	08 95       	ret

00000412 <EEPROM>:
 412:	8d e7       	ldi	r24, 0x7D	; 125
*EEPROM
*prompt user to read or write to EEPROM otherwise exit
*/
void EEPROM(void)
{
  UART_Puts("Would you like to (R)ead, (W)rite, or (E)xit: ");
 414:	91 e0       	ldi	r25, 0x01	; 1
 416:	0d df       	rcall	.-486    	; 0x232 <UART_Puts>
  UART_Get(); // get input from terminal
 418:	ce de       	rcall	.-612    	; 0x1b6 <UART_Get>
 41a:	80 91 07 03 	lds	r24, 0x0307	; 0x800307 <ASCII>
  if (ASCII == 'r' || ASCII == 'R') 
 41e:	8f 7d       	andi	r24, 0xDF	; 223
 420:	82 35       	cpi	r24, 0x52	; 82
 422:	31 f4       	brne	.+12     	; 0x430 <EEPROM+0x1e>
 424:	8c ea       	ldi	r24, 0xAC	; 172
  {
    UART_Puts("You selected to read from EEPROM.\n");
 426:	91 e0       	ldi	r25, 0x01	; 1
 428:	04 df       	rcall	.-504    	; 0x232 <UART_Puts>
    getEEPROMAddress();
 42a:	e2 df       	rcall	.-60     	; 0x3f0 <getEEPROMAddress>
 42c:	f4 ce       	rjmp	.-536    	; 0x216 <EEPROM_Read>
    EEPROM_Read(); // gets value stored in EEPROM
 42e:	08 95       	ret
 430:	87 35       	cpi	r24, 0x57	; 87
  } 
  else if (ASCII == 'w' || ASCII == 'W') 
 432:	71 f4       	brne	.+28     	; 0x450 <EEPROM+0x3e>
  {
    UART_Puts("You selected to write to EEPROM.\n");
 434:	8f ec       	ldi	r24, 0xCF	; 207
 436:	91 e0       	ldi	r25, 0x01	; 1
    getEEPROMAddress();
 438:	fc de       	rcall	.-520    	; 0x232 <UART_Puts>
 43a:	da df       	rcall	.-76     	; 0x3f0 <getEEPROMAddress>
    UART_Puts("Enter the content to be stored at the EEPROM Address provide: ");
 43c:	81 ef       	ldi	r24, 0xF1	; 241
 43e:	91 e0       	ldi	r25, 0x01	; 1
 440:	f8 de       	rcall	.-528    	; 0x232 <UART_Puts>
    UART_Get(); // get input from terminal
 442:	b9 de       	rcall	.-654    	; 0x1b6 <UART_Get>
 444:	80 91 07 03 	lds	r24, 0x0307	; 0x800307 <ASCII>
    content = ASCII; // set content to be stored in address
 448:	80 93 02 03 	sts	0x0302, r24	; 0x800302 <content>
    EEPROM_Write(); // write data to EEPROM
 44c:	d6 ce       	rjmp	.-596    	; 0x1fa <EEPROM_Write>
 44e:	08 95       	ret
  }
  else if (ASCII == 'e' || ASCII == 'E') 
 450:	85 34       	cpi	r24, 0x45	; 69
 452:	21 f4       	brne	.+8      	; 0x45c <EEPROM+0x4a>
  {
    UART_Puts("Thank you.");
 454:	80 e3       	ldi	r24, 0x30	; 48
 456:	92 e0       	ldi	r25, 0x02	; 2
 458:	ec ce       	rjmp	.-552    	; 0x232 <UART_Puts>
 45a:	08 95       	ret
    return;
 45c:	80 e6       	ldi	r24, 0x60	; 96
  } 
  else 
  {
    UART_Puts(MS5);
 45e:	92 e0       	ldi	r25, 0x02	; 2
 460:	e8 ce       	rjmp	.-560    	; 0x232 <UART_Puts>
 462:	08 95       	ret

00000464 <Command>:
 464:	89 e8       	ldi	r24, 0x89	; 137
 466:	92 e0       	ldi	r25, 0x02	; 2
/**
* command interpreter
*/
void Command(void)
{
  UART_Puts(MS3);
 468:	e4 de       	rcall	.-568    	; 0x232 <UART_Puts>
  ASCII = '\0';						
 46a:	10 92 07 03 	sts	0x0307, r1	; 0x800307 <ASCII>
  while (ASCII == '\0')
  {
    UART_Get();
 46e:	a3 de       	rcall	.-698    	; 0x1b6 <UART_Get>
*/
void Command(void)
{
  UART_Puts(MS3);
  ASCII = '\0';						
  while (ASCII == '\0')
 470:	80 91 07 03 	lds	r24, 0x0307	; 0x800307 <ASCII>
 474:	88 23       	and	r24, r24
 476:	d9 f3       	breq	.-10     	; 0x46e <Command+0xa>
  {
    UART_Get();
  }
  switch (ASCII)
 478:	85 36       	cpi	r24, 0x65	; 101
 47a:	49 f0       	breq	.+18     	; 0x48e <Command+0x2a>
 47c:	8c 36       	cpi	r24, 0x6C	; 108
 47e:	19 f0       	breq	.+6      	; 0x486 <Command+0x22>
 480:	81 36       	cpi	r24, 0x61	; 97
 482:	39 f4       	brne	.+14     	; 0x492 <Command+0x2e>
  {
    case 'L' | 'l': LCD();
 484:	02 c0       	rjmp	.+4      	; 0x48a <Command+0x26>
    break;
    case 'A' | 'a': ADC();
 486:	03 cf       	rjmp	.-506    	; 0x28e <LCD>
 488:	08 95       	ret
    break;
 48a:	19 cf       	rjmp	.-462    	; 0x2be <ADC>
    case 'E' | 'e': EEPROM();
 48c:	08 95       	ret
    break;
 48e:	c1 cf       	rjmp	.-126    	; 0x412 <EEPROM>
    default:
    UART_Puts(MS5);
 490:	08 95       	ret
 492:	80 e6       	ldi	r24, 0x60	; 96
 494:	92 e0       	ldi	r25, 0x02	; 2
 496:	cd de       	rcall	.-614    	; 0x232 <UART_Puts>
    HELP();
 498:	f6 ce       	rjmp	.-532    	; 0x286 <HELP>
 49a:	08 95       	ret

0000049c <main>:
 49c:	2e de       	rcall	.-932    	; 0xfa <Mega328P_Init>
* main
*/
int main(void)
{
  Mega328P_Init();
  Banner();
 49e:	e9 de       	rcall	.-558    	; 0x272 <Banner>
  while (1)
  {
	  Command(); //infinite command loop
 4a0:	e1 df       	rcall	.-62     	; 0x464 <Command>
 4a2:	fe cf       	rjmp	.-4      	; 0x4a0 <main+0x4>

000004a4 <__subsf3>:
 4a4:	50 58       	subi	r21, 0x80	; 128

000004a6 <__addsf3>:
 4a6:	bb 27       	eor	r27, r27
 4a8:	aa 27       	eor	r26, r26
 4aa:	0e d0       	rcall	.+28     	; 0x4c8 <__addsf3x>
 4ac:	4d c1       	rjmp	.+666    	; 0x748 <__fp_round>
 4ae:	3e d1       	rcall	.+636    	; 0x72c <__fp_pscA>
 4b0:	30 f0       	brcs	.+12     	; 0x4be <__addsf3+0x18>
 4b2:	43 d1       	rcall	.+646    	; 0x73a <__fp_pscB>
 4b4:	20 f0       	brcs	.+8      	; 0x4be <__addsf3+0x18>
 4b6:	31 f4       	brne	.+12     	; 0x4c4 <__addsf3+0x1e>
 4b8:	9f 3f       	cpi	r25, 0xFF	; 255
 4ba:	11 f4       	brne	.+4      	; 0x4c0 <__addsf3+0x1a>
 4bc:	1e f4       	brtc	.+6      	; 0x4c4 <__addsf3+0x1e>
 4be:	33 c1       	rjmp	.+614    	; 0x726 <__fp_nan>
 4c0:	0e f4       	brtc	.+2      	; 0x4c4 <__addsf3+0x1e>
 4c2:	e0 95       	com	r30
 4c4:	e7 fb       	bst	r30, 7
 4c6:	29 c1       	rjmp	.+594    	; 0x71a <__fp_inf>

000004c8 <__addsf3x>:
 4c8:	e9 2f       	mov	r30, r25
 4ca:	4f d1       	rcall	.+670    	; 0x76a <__fp_split3>
 4cc:	80 f3       	brcs	.-32     	; 0x4ae <__addsf3+0x8>
 4ce:	ba 17       	cp	r27, r26
 4d0:	62 07       	cpc	r22, r18
 4d2:	73 07       	cpc	r23, r19
 4d4:	84 07       	cpc	r24, r20
 4d6:	95 07       	cpc	r25, r21
 4d8:	18 f0       	brcs	.+6      	; 0x4e0 <__addsf3x+0x18>
 4da:	71 f4       	brne	.+28     	; 0x4f8 <__addsf3x+0x30>
 4dc:	9e f5       	brtc	.+102    	; 0x544 <__addsf3x+0x7c>
 4de:	67 c1       	rjmp	.+718    	; 0x7ae <__fp_zero>
 4e0:	0e f4       	brtc	.+2      	; 0x4e4 <__addsf3x+0x1c>
 4e2:	e0 95       	com	r30
 4e4:	0b 2e       	mov	r0, r27
 4e6:	ba 2f       	mov	r27, r26
 4e8:	a0 2d       	mov	r26, r0
 4ea:	0b 01       	movw	r0, r22
 4ec:	b9 01       	movw	r22, r18
 4ee:	90 01       	movw	r18, r0
 4f0:	0c 01       	movw	r0, r24
 4f2:	ca 01       	movw	r24, r20
 4f4:	a0 01       	movw	r20, r0
 4f6:	11 24       	eor	r1, r1
 4f8:	ff 27       	eor	r31, r31
 4fa:	59 1b       	sub	r21, r25
 4fc:	99 f0       	breq	.+38     	; 0x524 <__addsf3x+0x5c>
 4fe:	59 3f       	cpi	r21, 0xF9	; 249
 500:	50 f4       	brcc	.+20     	; 0x516 <__addsf3x+0x4e>
 502:	50 3e       	cpi	r21, 0xE0	; 224
 504:	68 f1       	brcs	.+90     	; 0x560 <__addsf3x+0x98>
 506:	1a 16       	cp	r1, r26
 508:	f0 40       	sbci	r31, 0x00	; 0
 50a:	a2 2f       	mov	r26, r18
 50c:	23 2f       	mov	r18, r19
 50e:	34 2f       	mov	r19, r20
 510:	44 27       	eor	r20, r20
 512:	58 5f       	subi	r21, 0xF8	; 248
 514:	f3 cf       	rjmp	.-26     	; 0x4fc <__addsf3x+0x34>
 516:	46 95       	lsr	r20
 518:	37 95       	ror	r19
 51a:	27 95       	ror	r18
 51c:	a7 95       	ror	r26
 51e:	f0 40       	sbci	r31, 0x00	; 0
 520:	53 95       	inc	r21
 522:	c9 f7       	brne	.-14     	; 0x516 <__addsf3x+0x4e>
 524:	7e f4       	brtc	.+30     	; 0x544 <__addsf3x+0x7c>
 526:	1f 16       	cp	r1, r31
 528:	ba 0b       	sbc	r27, r26
 52a:	62 0b       	sbc	r22, r18
 52c:	73 0b       	sbc	r23, r19
 52e:	84 0b       	sbc	r24, r20
 530:	ba f0       	brmi	.+46     	; 0x560 <__addsf3x+0x98>
 532:	91 50       	subi	r25, 0x01	; 1
 534:	a1 f0       	breq	.+40     	; 0x55e <__addsf3x+0x96>
 536:	ff 0f       	add	r31, r31
 538:	bb 1f       	adc	r27, r27
 53a:	66 1f       	adc	r22, r22
 53c:	77 1f       	adc	r23, r23
 53e:	88 1f       	adc	r24, r24
 540:	c2 f7       	brpl	.-16     	; 0x532 <__addsf3x+0x6a>
 542:	0e c0       	rjmp	.+28     	; 0x560 <__addsf3x+0x98>
 544:	ba 0f       	add	r27, r26
 546:	62 1f       	adc	r22, r18
 548:	73 1f       	adc	r23, r19
 54a:	84 1f       	adc	r24, r20
 54c:	48 f4       	brcc	.+18     	; 0x560 <__addsf3x+0x98>
 54e:	87 95       	ror	r24
 550:	77 95       	ror	r23
 552:	67 95       	ror	r22
 554:	b7 95       	ror	r27
 556:	f7 95       	ror	r31
 558:	9e 3f       	cpi	r25, 0xFE	; 254
 55a:	08 f0       	brcs	.+2      	; 0x55e <__addsf3x+0x96>
 55c:	b3 cf       	rjmp	.-154    	; 0x4c4 <__addsf3+0x1e>
 55e:	93 95       	inc	r25
 560:	88 0f       	add	r24, r24
 562:	08 f0       	brcs	.+2      	; 0x566 <__addsf3x+0x9e>
 564:	99 27       	eor	r25, r25
 566:	ee 0f       	add	r30, r30
 568:	97 95       	ror	r25
 56a:	87 95       	ror	r24
 56c:	08 95       	ret

0000056e <__divsf3>:
 56e:	0c d0       	rcall	.+24     	; 0x588 <__divsf3x>
 570:	eb c0       	rjmp	.+470    	; 0x748 <__fp_round>
 572:	e3 d0       	rcall	.+454    	; 0x73a <__fp_pscB>
 574:	40 f0       	brcs	.+16     	; 0x586 <__divsf3+0x18>
 576:	da d0       	rcall	.+436    	; 0x72c <__fp_pscA>
 578:	30 f0       	brcs	.+12     	; 0x586 <__divsf3+0x18>
 57a:	21 f4       	brne	.+8      	; 0x584 <__divsf3+0x16>
 57c:	5f 3f       	cpi	r21, 0xFF	; 255
 57e:	19 f0       	breq	.+6      	; 0x586 <__divsf3+0x18>
 580:	cc c0       	rjmp	.+408    	; 0x71a <__fp_inf>
 582:	51 11       	cpse	r21, r1
 584:	15 c1       	rjmp	.+554    	; 0x7b0 <__fp_szero>
 586:	cf c0       	rjmp	.+414    	; 0x726 <__fp_nan>

00000588 <__divsf3x>:
 588:	f0 d0       	rcall	.+480    	; 0x76a <__fp_split3>
 58a:	98 f3       	brcs	.-26     	; 0x572 <__divsf3+0x4>

0000058c <__divsf3_pse>:
 58c:	99 23       	and	r25, r25
 58e:	c9 f3       	breq	.-14     	; 0x582 <__divsf3+0x14>
 590:	55 23       	and	r21, r21
 592:	b1 f3       	breq	.-20     	; 0x580 <__divsf3+0x12>
 594:	95 1b       	sub	r25, r21
 596:	55 0b       	sbc	r21, r21
 598:	bb 27       	eor	r27, r27
 59a:	aa 27       	eor	r26, r26
 59c:	62 17       	cp	r22, r18
 59e:	73 07       	cpc	r23, r19
 5a0:	84 07       	cpc	r24, r20
 5a2:	38 f0       	brcs	.+14     	; 0x5b2 <__divsf3_pse+0x26>
 5a4:	9f 5f       	subi	r25, 0xFF	; 255
 5a6:	5f 4f       	sbci	r21, 0xFF	; 255
 5a8:	22 0f       	add	r18, r18
 5aa:	33 1f       	adc	r19, r19
 5ac:	44 1f       	adc	r20, r20
 5ae:	aa 1f       	adc	r26, r26
 5b0:	a9 f3       	breq	.-22     	; 0x59c <__divsf3_pse+0x10>
 5b2:	33 d0       	rcall	.+102    	; 0x61a <__divsf3_pse+0x8e>
 5b4:	0e 2e       	mov	r0, r30
 5b6:	3a f0       	brmi	.+14     	; 0x5c6 <__divsf3_pse+0x3a>
 5b8:	e0 e8       	ldi	r30, 0x80	; 128
 5ba:	30 d0       	rcall	.+96     	; 0x61c <__divsf3_pse+0x90>
 5bc:	91 50       	subi	r25, 0x01	; 1
 5be:	50 40       	sbci	r21, 0x00	; 0
 5c0:	e6 95       	lsr	r30
 5c2:	00 1c       	adc	r0, r0
 5c4:	ca f7       	brpl	.-14     	; 0x5b8 <__divsf3_pse+0x2c>
 5c6:	29 d0       	rcall	.+82     	; 0x61a <__divsf3_pse+0x8e>
 5c8:	fe 2f       	mov	r31, r30
 5ca:	27 d0       	rcall	.+78     	; 0x61a <__divsf3_pse+0x8e>
 5cc:	66 0f       	add	r22, r22
 5ce:	77 1f       	adc	r23, r23
 5d0:	88 1f       	adc	r24, r24
 5d2:	bb 1f       	adc	r27, r27
 5d4:	26 17       	cp	r18, r22
 5d6:	37 07       	cpc	r19, r23
 5d8:	48 07       	cpc	r20, r24
 5da:	ab 07       	cpc	r26, r27
 5dc:	b0 e8       	ldi	r27, 0x80	; 128
 5de:	09 f0       	breq	.+2      	; 0x5e2 <__divsf3_pse+0x56>
 5e0:	bb 0b       	sbc	r27, r27
 5e2:	80 2d       	mov	r24, r0
 5e4:	bf 01       	movw	r22, r30
 5e6:	ff 27       	eor	r31, r31
 5e8:	93 58       	subi	r25, 0x83	; 131
 5ea:	5f 4f       	sbci	r21, 0xFF	; 255
 5ec:	2a f0       	brmi	.+10     	; 0x5f8 <__divsf3_pse+0x6c>
 5ee:	9e 3f       	cpi	r25, 0xFE	; 254
 5f0:	51 05       	cpc	r21, r1
 5f2:	68 f0       	brcs	.+26     	; 0x60e <__divsf3_pse+0x82>
 5f4:	92 c0       	rjmp	.+292    	; 0x71a <__fp_inf>
 5f6:	dc c0       	rjmp	.+440    	; 0x7b0 <__fp_szero>
 5f8:	5f 3f       	cpi	r21, 0xFF	; 255
 5fa:	ec f3       	brlt	.-6      	; 0x5f6 <__divsf3_pse+0x6a>
 5fc:	98 3e       	cpi	r25, 0xE8	; 232
 5fe:	dc f3       	brlt	.-10     	; 0x5f6 <__divsf3_pse+0x6a>
 600:	86 95       	lsr	r24
 602:	77 95       	ror	r23
 604:	67 95       	ror	r22
 606:	b7 95       	ror	r27
 608:	f7 95       	ror	r31
 60a:	9f 5f       	subi	r25, 0xFF	; 255
 60c:	c9 f7       	brne	.-14     	; 0x600 <__divsf3_pse+0x74>
 60e:	88 0f       	add	r24, r24
 610:	91 1d       	adc	r25, r1
 612:	96 95       	lsr	r25
 614:	87 95       	ror	r24
 616:	97 f9       	bld	r25, 7
 618:	08 95       	ret
 61a:	e1 e0       	ldi	r30, 0x01	; 1
 61c:	66 0f       	add	r22, r22
 61e:	77 1f       	adc	r23, r23
 620:	88 1f       	adc	r24, r24
 622:	bb 1f       	adc	r27, r27
 624:	62 17       	cp	r22, r18
 626:	73 07       	cpc	r23, r19
 628:	84 07       	cpc	r24, r20
 62a:	ba 07       	cpc	r27, r26
 62c:	20 f0       	brcs	.+8      	; 0x636 <__divsf3_pse+0xaa>
 62e:	62 1b       	sub	r22, r18
 630:	73 0b       	sbc	r23, r19
 632:	84 0b       	sbc	r24, r20
 634:	ba 0b       	sbc	r27, r26
 636:	ee 1f       	adc	r30, r30
 638:	88 f7       	brcc	.-30     	; 0x61c <__divsf3_pse+0x90>
 63a:	e0 95       	com	r30
 63c:	08 95       	ret

0000063e <__fixsfsi>:
 63e:	04 d0       	rcall	.+8      	; 0x648 <__fixunssfsi>
 640:	68 94       	set
 642:	b1 11       	cpse	r27, r1
 644:	b5 c0       	rjmp	.+362    	; 0x7b0 <__fp_szero>
 646:	08 95       	ret

00000648 <__fixunssfsi>:
 648:	98 d0       	rcall	.+304    	; 0x77a <__fp_splitA>
 64a:	88 f0       	brcs	.+34     	; 0x66e <__fixunssfsi+0x26>
 64c:	9f 57       	subi	r25, 0x7F	; 127
 64e:	90 f0       	brcs	.+36     	; 0x674 <__fixunssfsi+0x2c>
 650:	b9 2f       	mov	r27, r25
 652:	99 27       	eor	r25, r25
 654:	b7 51       	subi	r27, 0x17	; 23
 656:	a0 f0       	brcs	.+40     	; 0x680 <__fixunssfsi+0x38>
 658:	d1 f0       	breq	.+52     	; 0x68e <__fixunssfsi+0x46>
 65a:	66 0f       	add	r22, r22
 65c:	77 1f       	adc	r23, r23
 65e:	88 1f       	adc	r24, r24
 660:	99 1f       	adc	r25, r25
 662:	1a f0       	brmi	.+6      	; 0x66a <__fixunssfsi+0x22>
 664:	ba 95       	dec	r27
 666:	c9 f7       	brne	.-14     	; 0x65a <__fixunssfsi+0x12>
 668:	12 c0       	rjmp	.+36     	; 0x68e <__fixunssfsi+0x46>
 66a:	b1 30       	cpi	r27, 0x01	; 1
 66c:	81 f0       	breq	.+32     	; 0x68e <__fixunssfsi+0x46>
 66e:	9f d0       	rcall	.+318    	; 0x7ae <__fp_zero>
 670:	b1 e0       	ldi	r27, 0x01	; 1
 672:	08 95       	ret
 674:	9c c0       	rjmp	.+312    	; 0x7ae <__fp_zero>
 676:	67 2f       	mov	r22, r23
 678:	78 2f       	mov	r23, r24
 67a:	88 27       	eor	r24, r24
 67c:	b8 5f       	subi	r27, 0xF8	; 248
 67e:	39 f0       	breq	.+14     	; 0x68e <__fixunssfsi+0x46>
 680:	b9 3f       	cpi	r27, 0xF9	; 249
 682:	cc f3       	brlt	.-14     	; 0x676 <__fixunssfsi+0x2e>
 684:	86 95       	lsr	r24
 686:	77 95       	ror	r23
 688:	67 95       	ror	r22
 68a:	b3 95       	inc	r27
 68c:	d9 f7       	brne	.-10     	; 0x684 <__fixunssfsi+0x3c>
 68e:	3e f4       	brtc	.+14     	; 0x69e <__fixunssfsi+0x56>
 690:	90 95       	com	r25
 692:	80 95       	com	r24
 694:	70 95       	com	r23
 696:	61 95       	neg	r22
 698:	7f 4f       	sbci	r23, 0xFF	; 255
 69a:	8f 4f       	sbci	r24, 0xFF	; 255
 69c:	9f 4f       	sbci	r25, 0xFF	; 255
 69e:	08 95       	ret

000006a0 <__floatunsisf>:
 6a0:	e8 94       	clt
 6a2:	09 c0       	rjmp	.+18     	; 0x6b6 <__floatsisf+0x12>

000006a4 <__floatsisf>:
 6a4:	97 fb       	bst	r25, 7
 6a6:	3e f4       	brtc	.+14     	; 0x6b6 <__floatsisf+0x12>
 6a8:	90 95       	com	r25
 6aa:	80 95       	com	r24
 6ac:	70 95       	com	r23
 6ae:	61 95       	neg	r22
 6b0:	7f 4f       	sbci	r23, 0xFF	; 255
 6b2:	8f 4f       	sbci	r24, 0xFF	; 255
 6b4:	9f 4f       	sbci	r25, 0xFF	; 255
 6b6:	99 23       	and	r25, r25
 6b8:	a9 f0       	breq	.+42     	; 0x6e4 <__floatsisf+0x40>
 6ba:	f9 2f       	mov	r31, r25
 6bc:	96 e9       	ldi	r25, 0x96	; 150
 6be:	bb 27       	eor	r27, r27
 6c0:	93 95       	inc	r25
 6c2:	f6 95       	lsr	r31
 6c4:	87 95       	ror	r24
 6c6:	77 95       	ror	r23
 6c8:	67 95       	ror	r22
 6ca:	b7 95       	ror	r27
 6cc:	f1 11       	cpse	r31, r1
 6ce:	f8 cf       	rjmp	.-16     	; 0x6c0 <__floatsisf+0x1c>
 6d0:	fa f4       	brpl	.+62     	; 0x710 <__floatsisf+0x6c>
 6d2:	bb 0f       	add	r27, r27
 6d4:	11 f4       	brne	.+4      	; 0x6da <__floatsisf+0x36>
 6d6:	60 ff       	sbrs	r22, 0
 6d8:	1b c0       	rjmp	.+54     	; 0x710 <__floatsisf+0x6c>
 6da:	6f 5f       	subi	r22, 0xFF	; 255
 6dc:	7f 4f       	sbci	r23, 0xFF	; 255
 6de:	8f 4f       	sbci	r24, 0xFF	; 255
 6e0:	9f 4f       	sbci	r25, 0xFF	; 255
 6e2:	16 c0       	rjmp	.+44     	; 0x710 <__floatsisf+0x6c>
 6e4:	88 23       	and	r24, r24
 6e6:	11 f0       	breq	.+4      	; 0x6ec <__floatsisf+0x48>
 6e8:	96 e9       	ldi	r25, 0x96	; 150
 6ea:	11 c0       	rjmp	.+34     	; 0x70e <__floatsisf+0x6a>
 6ec:	77 23       	and	r23, r23
 6ee:	21 f0       	breq	.+8      	; 0x6f8 <__floatsisf+0x54>
 6f0:	9e e8       	ldi	r25, 0x8E	; 142
 6f2:	87 2f       	mov	r24, r23
 6f4:	76 2f       	mov	r23, r22
 6f6:	05 c0       	rjmp	.+10     	; 0x702 <__floatsisf+0x5e>
 6f8:	66 23       	and	r22, r22
 6fa:	71 f0       	breq	.+28     	; 0x718 <__floatsisf+0x74>
 6fc:	96 e8       	ldi	r25, 0x86	; 134
 6fe:	86 2f       	mov	r24, r22
 700:	70 e0       	ldi	r23, 0x00	; 0
 702:	60 e0       	ldi	r22, 0x00	; 0
 704:	2a f0       	brmi	.+10     	; 0x710 <__floatsisf+0x6c>
 706:	9a 95       	dec	r25
 708:	66 0f       	add	r22, r22
 70a:	77 1f       	adc	r23, r23
 70c:	88 1f       	adc	r24, r24
 70e:	da f7       	brpl	.-10     	; 0x706 <__floatsisf+0x62>
 710:	88 0f       	add	r24, r24
 712:	96 95       	lsr	r25
 714:	87 95       	ror	r24
 716:	97 f9       	bld	r25, 7
 718:	08 95       	ret

0000071a <__fp_inf>:
 71a:	97 f9       	bld	r25, 7
 71c:	9f 67       	ori	r25, 0x7F	; 127
 71e:	80 e8       	ldi	r24, 0x80	; 128
 720:	70 e0       	ldi	r23, 0x00	; 0
 722:	60 e0       	ldi	r22, 0x00	; 0
 724:	08 95       	ret

00000726 <__fp_nan>:
 726:	9f ef       	ldi	r25, 0xFF	; 255
 728:	80 ec       	ldi	r24, 0xC0	; 192
 72a:	08 95       	ret

0000072c <__fp_pscA>:
 72c:	00 24       	eor	r0, r0
 72e:	0a 94       	dec	r0
 730:	16 16       	cp	r1, r22
 732:	17 06       	cpc	r1, r23
 734:	18 06       	cpc	r1, r24
 736:	09 06       	cpc	r0, r25
 738:	08 95       	ret

0000073a <__fp_pscB>:
 73a:	00 24       	eor	r0, r0
 73c:	0a 94       	dec	r0
 73e:	12 16       	cp	r1, r18
 740:	13 06       	cpc	r1, r19
 742:	14 06       	cpc	r1, r20
 744:	05 06       	cpc	r0, r21
 746:	08 95       	ret

00000748 <__fp_round>:
 748:	09 2e       	mov	r0, r25
 74a:	03 94       	inc	r0
 74c:	00 0c       	add	r0, r0
 74e:	11 f4       	brne	.+4      	; 0x754 <__fp_round+0xc>
 750:	88 23       	and	r24, r24
 752:	52 f0       	brmi	.+20     	; 0x768 <__fp_round+0x20>
 754:	bb 0f       	add	r27, r27
 756:	40 f4       	brcc	.+16     	; 0x768 <__fp_round+0x20>
 758:	bf 2b       	or	r27, r31
 75a:	11 f4       	brne	.+4      	; 0x760 <__fp_round+0x18>
 75c:	60 ff       	sbrs	r22, 0
 75e:	04 c0       	rjmp	.+8      	; 0x768 <__fp_round+0x20>
 760:	6f 5f       	subi	r22, 0xFF	; 255
 762:	7f 4f       	sbci	r23, 0xFF	; 255
 764:	8f 4f       	sbci	r24, 0xFF	; 255
 766:	9f 4f       	sbci	r25, 0xFF	; 255
 768:	08 95       	ret

0000076a <__fp_split3>:
 76a:	57 fd       	sbrc	r21, 7
 76c:	90 58       	subi	r25, 0x80	; 128
 76e:	44 0f       	add	r20, r20
 770:	55 1f       	adc	r21, r21
 772:	59 f0       	breq	.+22     	; 0x78a <__fp_splitA+0x10>
 774:	5f 3f       	cpi	r21, 0xFF	; 255
 776:	71 f0       	breq	.+28     	; 0x794 <__fp_splitA+0x1a>
 778:	47 95       	ror	r20

0000077a <__fp_splitA>:
 77a:	88 0f       	add	r24, r24
 77c:	97 fb       	bst	r25, 7
 77e:	99 1f       	adc	r25, r25
 780:	61 f0       	breq	.+24     	; 0x79a <__fp_splitA+0x20>
 782:	9f 3f       	cpi	r25, 0xFF	; 255
 784:	79 f0       	breq	.+30     	; 0x7a4 <__fp_splitA+0x2a>
 786:	87 95       	ror	r24
 788:	08 95       	ret
 78a:	12 16       	cp	r1, r18
 78c:	13 06       	cpc	r1, r19
 78e:	14 06       	cpc	r1, r20
 790:	55 1f       	adc	r21, r21
 792:	f2 cf       	rjmp	.-28     	; 0x778 <__fp_split3+0xe>
 794:	46 95       	lsr	r20
 796:	f1 df       	rcall	.-30     	; 0x77a <__fp_splitA>
 798:	08 c0       	rjmp	.+16     	; 0x7aa <__fp_splitA+0x30>
 79a:	16 16       	cp	r1, r22
 79c:	17 06       	cpc	r1, r23
 79e:	18 06       	cpc	r1, r24
 7a0:	99 1f       	adc	r25, r25
 7a2:	f1 cf       	rjmp	.-30     	; 0x786 <__fp_splitA+0xc>
 7a4:	86 95       	lsr	r24
 7a6:	71 05       	cpc	r23, r1
 7a8:	61 05       	cpc	r22, r1
 7aa:	08 94       	sec
 7ac:	08 95       	ret

000007ae <__fp_zero>:
 7ae:	e8 94       	clt

000007b0 <__fp_szero>:
 7b0:	bb 27       	eor	r27, r27
 7b2:	66 27       	eor	r22, r22
 7b4:	77 27       	eor	r23, r23
 7b6:	cb 01       	movw	r24, r22
 7b8:	97 f9       	bld	r25, 7
 7ba:	08 95       	ret
 7bc:	0e f0       	brts	.+2      	; 0x7c0 <__fp_szero+0x10>
 7be:	a6 c0       	rjmp	.+332    	; 0x90c <__fp_mpack>
 7c0:	b2 cf       	rjmp	.-156    	; 0x726 <__fp_nan>
 7c2:	68 94       	set
 7c4:	aa cf       	rjmp	.-172    	; 0x71a <__fp_inf>

000007c6 <log>:
 7c6:	d9 df       	rcall	.-78     	; 0x77a <__fp_splitA>
 7c8:	c8 f3       	brcs	.-14     	; 0x7bc <__fp_szero+0xc>
 7ca:	99 23       	and	r25, r25
 7cc:	d1 f3       	breq	.-12     	; 0x7c2 <__fp_szero+0x12>
 7ce:	c6 f3       	brts	.-16     	; 0x7c0 <__fp_szero+0x10>
 7d0:	df 93       	push	r29
 7d2:	cf 93       	push	r28
 7d4:	1f 93       	push	r17
 7d6:	0f 93       	push	r16
 7d8:	ff 92       	push	r15
 7da:	c9 2f       	mov	r28, r25
 7dc:	dd 27       	eor	r29, r29
 7de:	88 23       	and	r24, r24
 7e0:	2a f0       	brmi	.+10     	; 0x7ec <log+0x26>
 7e2:	21 97       	sbiw	r28, 0x01	; 1
 7e4:	66 0f       	add	r22, r22
 7e6:	77 1f       	adc	r23, r23
 7e8:	88 1f       	adc	r24, r24
 7ea:	da f7       	brpl	.-10     	; 0x7e2 <log+0x1c>
 7ec:	20 e0       	ldi	r18, 0x00	; 0
 7ee:	30 e0       	ldi	r19, 0x00	; 0
 7f0:	40 e8       	ldi	r20, 0x80	; 128
 7f2:	5f eb       	ldi	r21, 0xBF	; 191
 7f4:	9f e3       	ldi	r25, 0x3F	; 63
 7f6:	88 39       	cpi	r24, 0x98	; 152
 7f8:	20 f0       	brcs	.+8      	; 0x802 <log+0x3c>
 7fa:	80 3e       	cpi	r24, 0xE0	; 224
 7fc:	30 f0       	brcs	.+12     	; 0x80a <log+0x44>
 7fe:	21 96       	adiw	r28, 0x01	; 1
 800:	8f 77       	andi	r24, 0x7F	; 127
 802:	51 de       	rcall	.-862    	; 0x4a6 <__addsf3>
 804:	e8 e6       	ldi	r30, 0x68	; 104
 806:	f0 e0       	ldi	r31, 0x00	; 0
 808:	03 c0       	rjmp	.+6      	; 0x810 <log+0x4a>
 80a:	4d de       	rcall	.-870    	; 0x4a6 <__addsf3>
 80c:	e5 e9       	ldi	r30, 0x95	; 149
 80e:	f0 e0       	ldi	r31, 0x00	; 0
 810:	8b d0       	rcall	.+278    	; 0x928 <__fp_powser>
 812:	8b 01       	movw	r16, r22
 814:	be 01       	movw	r22, r28
 816:	ec 01       	movw	r28, r24
 818:	fb 2e       	mov	r15, r27
 81a:	6f 57       	subi	r22, 0x7F	; 127
 81c:	71 09       	sbc	r23, r1
 81e:	75 95       	asr	r23
 820:	77 1f       	adc	r23, r23
 822:	88 0b       	sbc	r24, r24
 824:	99 0b       	sbc	r25, r25
 826:	3e df       	rcall	.-388    	; 0x6a4 <__floatsisf>
 828:	28 e1       	ldi	r18, 0x18	; 24
 82a:	32 e7       	ldi	r19, 0x72	; 114
 82c:	41 e3       	ldi	r20, 0x31	; 49
 82e:	5f e3       	ldi	r21, 0x3F	; 63
 830:	16 d0       	rcall	.+44     	; 0x85e <__mulsf3x>
 832:	af 2d       	mov	r26, r15
 834:	98 01       	movw	r18, r16
 836:	ae 01       	movw	r20, r28
 838:	ff 90       	pop	r15
 83a:	0f 91       	pop	r16
 83c:	1f 91       	pop	r17
 83e:	cf 91       	pop	r28
 840:	df 91       	pop	r29
 842:	42 de       	rcall	.-892    	; 0x4c8 <__addsf3x>
 844:	81 cf       	rjmp	.-254    	; 0x748 <__fp_round>

00000846 <__mulsf3>:
 846:	0b d0       	rcall	.+22     	; 0x85e <__mulsf3x>
 848:	7f cf       	rjmp	.-258    	; 0x748 <__fp_round>
 84a:	70 df       	rcall	.-288    	; 0x72c <__fp_pscA>
 84c:	28 f0       	brcs	.+10     	; 0x858 <__mulsf3+0x12>
 84e:	75 df       	rcall	.-278    	; 0x73a <__fp_pscB>
 850:	18 f0       	brcs	.+6      	; 0x858 <__mulsf3+0x12>
 852:	95 23       	and	r25, r21
 854:	09 f0       	breq	.+2      	; 0x858 <__mulsf3+0x12>
 856:	61 cf       	rjmp	.-318    	; 0x71a <__fp_inf>
 858:	66 cf       	rjmp	.-308    	; 0x726 <__fp_nan>
 85a:	11 24       	eor	r1, r1
 85c:	a9 cf       	rjmp	.-174    	; 0x7b0 <__fp_szero>

0000085e <__mulsf3x>:
 85e:	85 df       	rcall	.-246    	; 0x76a <__fp_split3>
 860:	a0 f3       	brcs	.-24     	; 0x84a <__mulsf3+0x4>

00000862 <__mulsf3_pse>:
 862:	95 9f       	mul	r25, r21
 864:	d1 f3       	breq	.-12     	; 0x85a <__mulsf3+0x14>
 866:	95 0f       	add	r25, r21
 868:	50 e0       	ldi	r21, 0x00	; 0
 86a:	55 1f       	adc	r21, r21
 86c:	62 9f       	mul	r22, r18
 86e:	f0 01       	movw	r30, r0
 870:	72 9f       	mul	r23, r18
 872:	bb 27       	eor	r27, r27
 874:	f0 0d       	add	r31, r0
 876:	b1 1d       	adc	r27, r1
 878:	63 9f       	mul	r22, r19
 87a:	aa 27       	eor	r26, r26
 87c:	f0 0d       	add	r31, r0
 87e:	b1 1d       	adc	r27, r1
 880:	aa 1f       	adc	r26, r26
 882:	64 9f       	mul	r22, r20
 884:	66 27       	eor	r22, r22
 886:	b0 0d       	add	r27, r0
 888:	a1 1d       	adc	r26, r1
 88a:	66 1f       	adc	r22, r22
 88c:	82 9f       	mul	r24, r18
 88e:	22 27       	eor	r18, r18
 890:	b0 0d       	add	r27, r0
 892:	a1 1d       	adc	r26, r1
 894:	62 1f       	adc	r22, r18
 896:	73 9f       	mul	r23, r19
 898:	b0 0d       	add	r27, r0
 89a:	a1 1d       	adc	r26, r1
 89c:	62 1f       	adc	r22, r18
 89e:	83 9f       	mul	r24, r19
 8a0:	a0 0d       	add	r26, r0
 8a2:	61 1d       	adc	r22, r1
 8a4:	22 1f       	adc	r18, r18
 8a6:	74 9f       	mul	r23, r20
 8a8:	33 27       	eor	r19, r19
 8aa:	a0 0d       	add	r26, r0
 8ac:	61 1d       	adc	r22, r1
 8ae:	23 1f       	adc	r18, r19
 8b0:	84 9f       	mul	r24, r20
 8b2:	60 0d       	add	r22, r0
 8b4:	21 1d       	adc	r18, r1
 8b6:	82 2f       	mov	r24, r18
 8b8:	76 2f       	mov	r23, r22
 8ba:	6a 2f       	mov	r22, r26
 8bc:	11 24       	eor	r1, r1
 8be:	9f 57       	subi	r25, 0x7F	; 127
 8c0:	50 40       	sbci	r21, 0x00	; 0
 8c2:	8a f0       	brmi	.+34     	; 0x8e6 <__mulsf3_pse+0x84>
 8c4:	e1 f0       	breq	.+56     	; 0x8fe <__mulsf3_pse+0x9c>
 8c6:	88 23       	and	r24, r24
 8c8:	4a f0       	brmi	.+18     	; 0x8dc <__mulsf3_pse+0x7a>
 8ca:	ee 0f       	add	r30, r30
 8cc:	ff 1f       	adc	r31, r31
 8ce:	bb 1f       	adc	r27, r27
 8d0:	66 1f       	adc	r22, r22
 8d2:	77 1f       	adc	r23, r23
 8d4:	88 1f       	adc	r24, r24
 8d6:	91 50       	subi	r25, 0x01	; 1
 8d8:	50 40       	sbci	r21, 0x00	; 0
 8da:	a9 f7       	brne	.-22     	; 0x8c6 <__mulsf3_pse+0x64>
 8dc:	9e 3f       	cpi	r25, 0xFE	; 254
 8de:	51 05       	cpc	r21, r1
 8e0:	70 f0       	brcs	.+28     	; 0x8fe <__mulsf3_pse+0x9c>
 8e2:	1b cf       	rjmp	.-458    	; 0x71a <__fp_inf>
 8e4:	65 cf       	rjmp	.-310    	; 0x7b0 <__fp_szero>
 8e6:	5f 3f       	cpi	r21, 0xFF	; 255
 8e8:	ec f3       	brlt	.-6      	; 0x8e4 <__mulsf3_pse+0x82>
 8ea:	98 3e       	cpi	r25, 0xE8	; 232
 8ec:	dc f3       	brlt	.-10     	; 0x8e4 <__mulsf3_pse+0x82>
 8ee:	86 95       	lsr	r24
 8f0:	77 95       	ror	r23
 8f2:	67 95       	ror	r22
 8f4:	b7 95       	ror	r27
 8f6:	f7 95       	ror	r31
 8f8:	e7 95       	ror	r30
 8fa:	9f 5f       	subi	r25, 0xFF	; 255
 8fc:	c1 f7       	brne	.-16     	; 0x8ee <__mulsf3_pse+0x8c>
 8fe:	fe 2b       	or	r31, r30
 900:	88 0f       	add	r24, r24
 902:	91 1d       	adc	r25, r1
 904:	96 95       	lsr	r25
 906:	87 95       	ror	r24
 908:	97 f9       	bld	r25, 7
 90a:	08 95       	ret

0000090c <__fp_mpack>:
 90c:	9f 3f       	cpi	r25, 0xFF	; 255
 90e:	31 f0       	breq	.+12     	; 0x91c <__fp_mpack_finite+0xc>

00000910 <__fp_mpack_finite>:
 910:	91 50       	subi	r25, 0x01	; 1
 912:	20 f4       	brcc	.+8      	; 0x91c <__fp_mpack_finite+0xc>
 914:	87 95       	ror	r24
 916:	77 95       	ror	r23
 918:	67 95       	ror	r22
 91a:	b7 95       	ror	r27
 91c:	88 0f       	add	r24, r24
 91e:	91 1d       	adc	r25, r1
 920:	96 95       	lsr	r25
 922:	87 95       	ror	r24
 924:	97 f9       	bld	r25, 7
 926:	08 95       	ret

00000928 <__fp_powser>:
 928:	df 93       	push	r29
 92a:	cf 93       	push	r28
 92c:	1f 93       	push	r17
 92e:	0f 93       	push	r16
 930:	ff 92       	push	r15
 932:	ef 92       	push	r14
 934:	df 92       	push	r13
 936:	7b 01       	movw	r14, r22
 938:	8c 01       	movw	r16, r24
 93a:	68 94       	set
 93c:	05 c0       	rjmp	.+10     	; 0x948 <__fp_powser+0x20>
 93e:	da 2e       	mov	r13, r26
 940:	ef 01       	movw	r28, r30
 942:	8d df       	rcall	.-230    	; 0x85e <__mulsf3x>
 944:	fe 01       	movw	r30, r28
 946:	e8 94       	clt
 948:	a5 91       	lpm	r26, Z+
 94a:	25 91       	lpm	r18, Z+
 94c:	35 91       	lpm	r19, Z+
 94e:	45 91       	lpm	r20, Z+
 950:	55 91       	lpm	r21, Z+
 952:	ae f3       	brts	.-22     	; 0x93e <__fp_powser+0x16>
 954:	ef 01       	movw	r28, r30
 956:	b8 dd       	rcall	.-1168   	; 0x4c8 <__addsf3x>
 958:	fe 01       	movw	r30, r28
 95a:	97 01       	movw	r18, r14
 95c:	a8 01       	movw	r20, r16
 95e:	da 94       	dec	r13
 960:	79 f7       	brne	.-34     	; 0x940 <__fp_powser+0x18>
 962:	df 90       	pop	r13
 964:	ef 90       	pop	r14
 966:	ff 90       	pop	r15
 968:	0f 91       	pop	r16
 96a:	1f 91       	pop	r17
 96c:	cf 91       	pop	r28
 96e:	df 91       	pop	r29
 970:	08 95       	ret

00000972 <__itoa_ncheck>:
 972:	bb 27       	eor	r27, r27
 974:	4a 30       	cpi	r20, 0x0A	; 10
 976:	31 f4       	brne	.+12     	; 0x984 <__itoa_ncheck+0x12>
 978:	99 23       	and	r25, r25
 97a:	22 f4       	brpl	.+8      	; 0x984 <__itoa_ncheck+0x12>
 97c:	bd e2       	ldi	r27, 0x2D	; 45
 97e:	90 95       	com	r25
 980:	81 95       	neg	r24
 982:	9f 4f       	sbci	r25, 0xFF	; 255
 984:	01 c0       	rjmp	.+2      	; 0x988 <__utoa_common>

00000986 <__utoa_ncheck>:
 986:	bb 27       	eor	r27, r27

00000988 <__utoa_common>:
 988:	fb 01       	movw	r30, r22
 98a:	55 27       	eor	r21, r21
 98c:	aa 27       	eor	r26, r26
 98e:	88 0f       	add	r24, r24
 990:	99 1f       	adc	r25, r25
 992:	aa 1f       	adc	r26, r26
 994:	a4 17       	cp	r26, r20
 996:	10 f0       	brcs	.+4      	; 0x99c <__utoa_common+0x14>
 998:	a4 1b       	sub	r26, r20
 99a:	83 95       	inc	r24
 99c:	50 51       	subi	r21, 0x10	; 16
 99e:	b9 f7       	brne	.-18     	; 0x98e <__utoa_common+0x6>
 9a0:	a0 5d       	subi	r26, 0xD0	; 208
 9a2:	aa 33       	cpi	r26, 0x3A	; 58
 9a4:	08 f0       	brcs	.+2      	; 0x9a8 <__utoa_common+0x20>
 9a6:	a9 5d       	subi	r26, 0xD9	; 217
 9a8:	a1 93       	st	Z+, r26
 9aa:	00 97       	sbiw	r24, 0x00	; 0
 9ac:	79 f7       	brne	.-34     	; 0x98c <__utoa_common+0x4>
 9ae:	b1 11       	cpse	r27, r1
 9b0:	b1 93       	st	Z+, r27
 9b2:	11 92       	st	Z+, r1
 9b4:	cb 01       	movw	r24, r22
 9b6:	00 c0       	rjmp	.+0      	; 0x9b8 <strrev>

000009b8 <strrev>:
 9b8:	dc 01       	movw	r26, r24
 9ba:	fc 01       	movw	r30, r24
 9bc:	67 2f       	mov	r22, r23
 9be:	71 91       	ld	r23, Z+
 9c0:	77 23       	and	r23, r23
 9c2:	e1 f7       	brne	.-8      	; 0x9bc <strrev+0x4>
 9c4:	32 97       	sbiw	r30, 0x02	; 2
 9c6:	04 c0       	rjmp	.+8      	; 0x9d0 <strrev+0x18>
 9c8:	7c 91       	ld	r23, X
 9ca:	6d 93       	st	X+, r22
 9cc:	70 83       	st	Z, r23
 9ce:	62 91       	ld	r22, -Z
 9d0:	ae 17       	cp	r26, r30
 9d2:	bf 07       	cpc	r27, r31
 9d4:	c8 f3       	brcs	.-14     	; 0x9c8 <strrev+0x10>
 9d6:	08 95       	ret

000009d8 <_exit>:
 9d8:	f8 94       	cli

000009da <__stop_program>:
 9da:	ff cf       	rjmp	.-2      	; 0x9da <__stop_program>
